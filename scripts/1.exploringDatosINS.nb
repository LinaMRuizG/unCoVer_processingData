(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    750667,      14308]
NotebookOptionsPosition[    744163,      14187]
NotebookOutlinePosition[    744555,      14203]
CellTagsIndexPosition[    744512,      14200]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\</home/lina/Downloads\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8389204809318333`*^9, 3.8389205246489697`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"bf5ec98a-db2c-44ac-b884-50c2e4aefff0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/lina/Downloads/Casos_positivos_de_COVID-19_en_Colombia.csv\>\"\
", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.838920528592779*^9, 3.8389205826561003`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"4b818ccc-1ddd-4b43-b6d1-9f96bf9e523b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataSet", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"d", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "20"}], ";;", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.838922594631035*^9, 3.8389226301188593`*^9}, {
   3.838922664025052*^9, 3.83892273447639*^9}, 3.838925541910418*^9, {
   3.838925633739374*^9, 3.8389256389158916`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"4aeb2b88-e3ba-43a9-9403-a579d011490b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894723, 
        "Fecha de notificaci\[OAcute]n" -> "18/6/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 20, "Nombre departamento" -> 
        "CESAR", "C\[OAcute]digo DIVIPOLA municipio" -> 20770, 
        "Nombre municipio" -> "SAN MARTIN", "Edad" -> 44, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "M", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "14/6/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "29/6/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894724, 
        "Fecha de notificaci\[OAcute]n" -> "15/6/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 20, "Nombre departamento" -> 
        "CESAR", "C\[OAcute]digo DIVIPOLA municipio" -> 20770, 
        "Nombre municipio" -> "SAN MARTIN", "Edad" -> 27, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "M", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "11/6/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "26/6/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894725, 
        "Fecha de notificaci\[OAcute]n" -> "7/6/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 20, "Nombre departamento" -> 
        "CESAR", "C\[OAcute]digo DIVIPOLA municipio" -> 20013, 
        "Nombre municipio" -> "AGUSTIN CODAZZI", "Edad" -> 36, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "M", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "3/6/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "18/6/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894726, 
        "Fecha de notificaci\[OAcute]n" -> "5/6/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 20, "Nombre departamento" -> 
        "CESAR", "C\[OAcute]digo DIVIPOLA municipio" -> 20013, 
        "Nombre municipio" -> "AGUSTIN CODAZZI", "Edad" -> 29, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "M", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "1/6/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "16/6/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894727, 
        "Fecha de notificaci\[OAcute]n" -> "2/6/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 20, "Nombre departamento" -> 
        "CESAR", "C\[OAcute]digo DIVIPOLA municipio" -> 20013, 
        "Nombre municipio" -> "AGUSTIN CODAZZI", "Edad" -> 33, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "M", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "29/5/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "13/6/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894728, 
        "Fecha de notificaci\[OAcute]n" -> "28/5/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 50, "Nombre departamento" -> 
        "META", "C\[OAcute]digo DIVIPOLA municipio" -> 50001, 
        "Nombre municipio" -> "VILLAVICENCIO", "Edad" -> 34, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "F", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "24/5/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "8/6/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894729, 
        "Fecha de notificaci\[OAcute]n" -> "22/5/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 20, "Nombre departamento" -> 
        "CESAR", "C\[OAcute]digo DIVIPOLA municipio" -> 20013, 
        "Nombre municipio" -> "AGUSTIN CODAZZI", "Edad" -> 56, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "F", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "18/5/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "2/6/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894730, 
        "Fecha de notificaci\[OAcute]n" -> "21/5/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 20, "Nombre departamento" -> 
        "CESAR", "C\[OAcute]digo DIVIPOLA municipio" -> 20013, 
        "Nombre municipio" -> "AGUSTIN CODAZZI", "Edad" -> 44, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "M", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "17/5/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "1/6/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894731, 
        "Fecha de notificaci\[OAcute]n" -> "12/5/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 50, "Nombre departamento" -> 
        "META", "C\[OAcute]digo DIVIPOLA municipio" -> 50001, 
        "Nombre municipio" -> "VILLAVICENCIO", "Edad" -> 29, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "F", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "8/5/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "23/5/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894732, 
        "Fecha de notificaci\[OAcute]n" -> "30/4/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 47001, 
        "Nombre departamento" -> "STA MARTA D.E.", 
        "C\[OAcute]digo DIVIPOLA municipio" -> 47001, "Nombre municipio" -> 
        "SANTA MARTA", "Edad" -> 57, "Unidad de medida de edad" -> 1, "Sexo" -> 
        "M", "Tipo de contagio" -> "En estudio", "Ubicaci\[OAcute]n del caso" -> 
        "Casa", "Estado" -> "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> 
        "", "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "26/4/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "11/5/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894733, 
        "Fecha de notificaci\[OAcute]n" -> "30/4/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 47001, 
        "Nombre departamento" -> "STA MARTA D.E.", 
        "C\[OAcute]digo DIVIPOLA municipio" -> 47001, "Nombre municipio" -> 
        "SANTA MARTA", "Edad" -> 53, "Unidad de medida de edad" -> 1, "Sexo" -> 
        "F", "Tipo de contagio" -> "En estudio", "Ubicaci\[OAcute]n del caso" -> 
        "Casa", "Estado" -> "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> 
        "", "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "26/4/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "11/5/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894734, 
        "Fecha de notificaci\[OAcute]n" -> "30/4/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 47001, 
        "Nombre departamento" -> "STA MARTA D.E.", 
        "C\[OAcute]digo DIVIPOLA municipio" -> 47001, "Nombre municipio" -> 
        "SANTA MARTA", "Edad" -> 51, "Unidad de medida de edad" -> 1, "Sexo" -> 
        "F", "Tipo de contagio" -> "En estudio", "Ubicaci\[OAcute]n del caso" -> 
        "Casa", "Estado" -> "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> 
        "", "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "26/4/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "11/5/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894735, 
        "Fecha de notificaci\[OAcute]n" -> "30/4/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 47001, 
        "Nombre departamento" -> "STA MARTA D.E.", 
        "C\[OAcute]digo DIVIPOLA municipio" -> 47001, "Nombre municipio" -> 
        "SANTA MARTA", "Edad" -> 54, "Unidad de medida de edad" -> 1, "Sexo" -> 
        "M", "Tipo de contagio" -> "En estudio", "Ubicaci\[OAcute]n del caso" -> 
        "Casa", "Estado" -> "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> 
        "", "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "26/4/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "11/5/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894736, 
        "Fecha de notificaci\[OAcute]n" -> "27/4/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 13001, 
        "Nombre departamento" -> "CARTAGENA", 
        "C\[OAcute]digo DIVIPOLA municipio" -> 13001, "Nombre municipio" -> 
        "CARTAGENA", "Edad" -> 76, "Unidad de medida de edad" -> 1, "Sexo" -> 
        "M", "Tipo de contagio" -> "En estudio", "Ubicaci\[OAcute]n del caso" -> 
        "Casa", "Estado" -> "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> 
        "", "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "23/4/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "8/5/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894737, 
        "Fecha de notificaci\[OAcute]n" -> "18/4/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 47001, 
        "Nombre departamento" -> "STA MARTA D.E.", 
        "C\[OAcute]digo DIVIPOLA municipio" -> 47001, "Nombre municipio" -> 
        "SANTA MARTA", "Edad" -> 47, "Unidad de medida de edad" -> 1, "Sexo" -> 
        "M", "Tipo de contagio" -> "En estudio", "Ubicaci\[OAcute]n del caso" -> 
        "Casa", "Estado" -> "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> 
        "", "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "14/4/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "29/4/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894738, 
        "Fecha de notificaci\[OAcute]n" -> "18/3/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 47001, 
        "Nombre departamento" -> "STA MARTA D.E.", 
        "C\[OAcute]digo DIVIPOLA municipio" -> 47001, "Nombre municipio" -> 
        "SANTA MARTA", "Edad" -> 11, "Unidad de medida de edad" -> 1, "Sexo" -> 
        "M", "Tipo de contagio" -> "En estudio", "Ubicaci\[OAcute]n del caso" -> 
        "Casa", "Estado" -> "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> 
        "", "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "14/3/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "29/3/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894739, 
        "Fecha de notificaci\[OAcute]n" -> "18/3/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 47, "Nombre departamento" -> 
        "MAGDALENA", "C\[OAcute]digo DIVIPOLA municipio" -> 47189, 
        "Nombre municipio" -> "CIENAGA", "Edad" -> 47, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "F", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "14/3/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "29/3/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894740, 
        "Fecha de notificaci\[OAcute]n" -> "9/2/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 47, "Nombre departamento" -> 
        "MAGDALENA", "C\[OAcute]digo DIVIPOLA municipio" -> 47288, 
        "Nombre municipio" -> "FUNDACION", "Edad" -> 92, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "F", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "5/2/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "20/2/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894741, 
        "Fecha de notificaci\[OAcute]n" -> "19/1/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 19, "Nombre departamento" -> 
        "CAUCA", "C\[OAcute]digo DIVIPOLA municipio" -> 19548, 
        "Nombre municipio" -> "PIENDAMO", "Edad" -> 23, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "M", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "15/1/2021 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "30/1/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""], 
       Association[
       "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894742, 
        "Fecha de notificaci\[OAcute]n" -> "4/1/2021 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 47, "Nombre departamento" -> 
        "MAGDALENA", "C\[OAcute]digo DIVIPOLA municipio" -> 47189, 
        "Nombre municipio" -> "CIENAGA", "Edad" -> 42, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "M", "Tipo de contagio" -> 
        "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
        "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "31/12/2020 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "15/1/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
        "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
        "", "Nombre del grupo \[EAcute]tnico" -> ""]}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "fecha reporte web"} -> 1, {All, "ID de caso"} -> 
        1, {All, "Fecha de notificaci\[OAcute]n"} -> 
        1, {All, "C\[OAcute]digo DIVIPOLA departamento"} -> 
        1, {All, "Nombre departamento"} -> 
        1, {All, "C\[OAcute]digo DIVIPOLA municipio"} -> 
        1, {All, "Nombre municipio"} -> 1, {All, "Edad"} -> 
        1, {All, "Unidad de medida de edad"} -> 1, {All, "Sexo"} -> 
        1, {All, "Tipo de contagio"} -> 
        1, {All, "Ubicaci\[OAcute]n del caso"} -> 1, {All, "Estado"} -> 
        1, {All, "C\[OAcute]digo ISO del pa\[IAcute]s"} -> 
        1, {All, "Nombre del pa\[IAcute]s"} -> 1, {All, "Recuperado"} -> 
        1, {All, "Fecha de inicio de s\[IAcute]ntomas"} -> 
        1, {All, "Fecha de muerte"} -> 
        1, {All, "Fecha de diagn\[OAcute]stico"} -> 
        1, {All, "Fecha de recuperaci\[OAcute]n"} -> 
        1, {All, "Tipo de recuperaci\[OAcute]n"} -> 
        1, {All, "Pertenencia \[EAcute]tnica"} -> 
        1, {All, "Nombre del grupo \[EAcute]tnico"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "fecha reporte web" -> TypeSystem`PackageScope`AtomShape[178.5], 
            "ID de caso" -> TypeSystem`PackageScope`AtomShape[34], 
            "Fecha de notificaci\[OAcute]n" -> 
            TypeSystem`PackageScope`AtomShape[190.4], 
            "C\[OAcute]digo DIVIPOLA departamento" -> 
            TypeSystem`PackageScope`AtomShape[34], "Nombre departamento" -> 
            TypeSystem`PackageScope`AtomShape[147.], 
            "C\[OAcute]digo DIVIPOLA municipio" -> 
            TypeSystem`PackageScope`AtomShape[34], "Nombre municipio" -> 
            TypeSystem`PackageScope`AtomShape[168.00000000000003`], "Edad" -> 
            TypeSystem`PackageScope`AtomShape[34], "Unidad de medida de edad" -> 
            TypeSystem`PackageScope`AtomShape[34], "Sexo" -> 
            TypeSystem`PackageScope`AtomShape[31.5], "Tipo de contagio" -> 
            TypeSystem`PackageScope`AtomShape[105.], 
            "Ubicaci\[OAcute]n del caso" -> 
            TypeSystem`PackageScope`AtomShape[42.], "Estado" -> 
            TypeSystem`PackageScope`AtomShape[42.], 
            "C\[OAcute]digo ISO del pa\[IAcute]s" -> 
            TypeSystem`PackageScope`AtomShape[31.5], 
            "Nombre del pa\[IAcute]s" -> 
            TypeSystem`PackageScope`AtomShape[31.5], "Recuperado" -> 
            TypeSystem`PackageScope`AtomShape[63.], 
            "Fecha de inicio de s\[IAcute]ntomas" -> 
            TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
            "Fecha de muerte" -> TypeSystem`PackageScope`AtomShape[31.5], 
            "Fecha de diagn\[OAcute]stico" -> 
            TypeSystem`PackageScope`AtomShape[190.4], 
            "Fecha de recuperaci\[OAcute]n" -> 
            TypeSystem`PackageScope`AtomShape[31.5], 
            "Tipo de recuperaci\[OAcute]n" -> 
            TypeSystem`PackageScope`AtomShape[31.5], 
            "Pertenencia \[EAcute]tnica" -> 
            TypeSystem`PackageScope`AtomShape[31.5], 
            "Nombre del grupo \[EAcute]tnico" -> 
            TypeSystem`PackageScope`AtomShape[31.5]]], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "fecha reporte web", "ID de caso", "Fecha de notificaci\[OAcute]n", 
         "C\[OAcute]digo DIVIPOLA departamento", "Nombre departamento", 
         "C\[OAcute]digo DIVIPOLA municipio", "Nombre municipio", "Edad", 
         "Unidad de medida de edad", "Sexo", "Tipo de contagio", 
         "Ubicaci\[OAcute]n del caso", "Estado", 
         "C\[OAcute]digo ISO del pa\[IAcute]s", "Nombre del pa\[IAcute]s", 
         "Recuperado", "Fecha de inicio de s\[IAcute]ntomas", 
         "Fecha de muerte", "Fecha de diagn\[OAcute]stico", 
         "Fecha de recuperaci\[OAcute]n", "Tipo de recuperaci\[OAcute]n", 
         "Pertenencia \[EAcute]tnica", "Nombre del grupo \[EAcute]tnico"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["24/8/2021 0:00:00"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "CARTAGENA", "CAUCA", "CESAR", "MAGDALENA", "META", 
           "STA MARTA D.E."]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["F", "M"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["En estudio"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Casa"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Leve"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Activo"]], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]]}], 20], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "fecha reporte web"} -> 1, {All, "ID de caso"} -> 
        1, {All, "Fecha de notificaci\[OAcute]n"} -> 
        1, {All, "C\[OAcute]digo DIVIPOLA departamento"} -> 
        1, {All, "Nombre departamento"} -> 
        1, {All, "C\[OAcute]digo DIVIPOLA municipio"} -> 
        1, {All, "Nombre municipio"} -> 1, {All, "Edad"} -> 
        1, {All, "Unidad de medida de edad"} -> 1, {All, "Sexo"} -> 
        1, {All, "Tipo de contagio"} -> 
        1, {All, "Ubicaci\[OAcute]n del caso"} -> 1, {All, "Estado"} -> 
        1, {All, "C\[OAcute]digo ISO del pa\[IAcute]s"} -> 
        1, {All, "Nombre del pa\[IAcute]s"} -> 1, {All, "Recuperado"} -> 
        1, {All, "Fecha de inicio de s\[IAcute]ntomas"} -> 
        1, {All, "Fecha de muerte"} -> 
        1, {All, "Fecha de diagn\[OAcute]stico"} -> 
        1, {All, "Fecha de recuperaci\[OAcute]n"} -> 
        1, {All, "Tipo de recuperaci\[OAcute]n"} -> 
        1, {All, "Pertenencia \[EAcute]tnica"} -> 
        1, {All, "Nombre del grupo \[EAcute]tnico"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "fecha reporte web" -> TypeSystem`PackageScope`AtomShape[178.5], 
            "ID de caso" -> TypeSystem`PackageScope`AtomShape[34], 
            "Fecha de notificaci\[OAcute]n" -> 
            TypeSystem`PackageScope`AtomShape[190.4], 
            "C\[OAcute]digo DIVIPOLA departamento" -> 
            TypeSystem`PackageScope`AtomShape[34], "Nombre departamento" -> 
            TypeSystem`PackageScope`AtomShape[147.], 
            "C\[OAcute]digo DIVIPOLA municipio" -> 
            TypeSystem`PackageScope`AtomShape[34], "Nombre municipio" -> 
            TypeSystem`PackageScope`AtomShape[168.00000000000003`], "Edad" -> 
            TypeSystem`PackageScope`AtomShape[34], "Unidad de medida de edad" -> 
            TypeSystem`PackageScope`AtomShape[34], "Sexo" -> 
            TypeSystem`PackageScope`AtomShape[31.5], "Tipo de contagio" -> 
            TypeSystem`PackageScope`AtomShape[105.], 
            "Ubicaci\[OAcute]n del caso" -> 
            TypeSystem`PackageScope`AtomShape[42.], "Estado" -> 
            TypeSystem`PackageScope`AtomShape[42.], 
            "C\[OAcute]digo ISO del pa\[IAcute]s" -> 
            TypeSystem`PackageScope`AtomShape[31.5], 
            "Nombre del pa\[IAcute]s" -> 
            TypeSystem`PackageScope`AtomShape[31.5], "Recuperado" -> 
            TypeSystem`PackageScope`AtomShape[63.], 
            "Fecha de inicio de s\[IAcute]ntomas" -> 
            TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
            "Fecha de muerte" -> TypeSystem`PackageScope`AtomShape[31.5], 
            "Fecha de diagn\[OAcute]stico" -> 
            TypeSystem`PackageScope`AtomShape[190.4], 
            "Fecha de recuperaci\[OAcute]n" -> 
            TypeSystem`PackageScope`AtomShape[31.5], 
            "Tipo de recuperaci\[OAcute]n" -> 
            TypeSystem`PackageScope`AtomShape[31.5], 
            "Pertenencia \[EAcute]tnica" -> 
            TypeSystem`PackageScope`AtomShape[31.5], 
            "Nombre del grupo \[EAcute]tnico" -> 
            TypeSystem`PackageScope`AtomShape[31.5]]], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "fecha reporte web", "ID de caso", "Fecha de notificaci\[OAcute]n", 
         "C\[OAcute]digo DIVIPOLA departamento", "Nombre departamento", 
         "C\[OAcute]digo DIVIPOLA municipio", "Nombre municipio", "Edad", 
         "Unidad de medida de edad", "Sexo", "Tipo de contagio", 
         "Ubicaci\[OAcute]n del caso", "Estado", 
         "C\[OAcute]digo ISO del pa\[IAcute]s", "Nombre del pa\[IAcute]s", 
         "Recuperado", "Fecha de inicio de s\[IAcute]ntomas", 
         "Fecha de muerte", "Fecha de diagn\[OAcute]stico", 
         "Fecha de recuperaci\[OAcute]n", "Tipo de recuperaci\[OAcute]n", 
         "Pertenencia \[EAcute]tnica", "Nombre del grupo \[EAcute]tnico"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["24/8/2021 0:00:00"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "CARTAGENA", "CAUCA", "CESAR", "MAGDALENA", "META", 
           "STA MARTA D.E."]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["F", "M"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["En estudio"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Casa"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Leve"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Activo"]], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[""]]}], 20], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     20, "DataColumnCount" -> 23, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["fecha reporte web", 
                  Style[
                  "fecha reporte web", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "fecha reporte web"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "fecha reporte web"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ID de caso", 
                  Style[
                  "ID de caso", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ID de caso"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ID de caso"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Fecha de notificaci\[OAcute]n", 
                  Style[
                  "Fecha de notificaci\[OAcute]n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Fecha de notificaci\[OAcute]n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Fecha de notificaci\[OAcute]n"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C\[OAcute]digo DIVIPOLA departamento", 
                  Style[
                  "C\[OAcute]digo DIVIPOLA departamento", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "C\[OAcute]digo DIVIPOLA departamento"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "C\[OAcute]digo DIVIPOLA departamento"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nombre departamento", 
                  Style[
                  "Nombre departamento", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Nombre departamento"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Nombre departamento"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C\[OAcute]digo DIVIPOLA municipio", 
                  Style[
                  "C\[OAcute]digo DIVIPOLA municipio", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "C\[OAcute]digo DIVIPOLA municipio"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "C\[OAcute]digo DIVIPOLA municipio"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nombre municipio", 
                  Style[
                  "Nombre municipio", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Nombre municipio"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Nombre municipio"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Edad", 
                  Style[
                  "Edad", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Edad"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Edad"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Unidad de medida de edad", 
                  Style[
                  "Unidad de medida de edad", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Unidad de medida de edad"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Unidad de medida de edad"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sexo", 
                  Style[
                  "Sexo", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Sexo"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Sexo"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894723"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["18/6/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CESAR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20770"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SAN MARTIN", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894724"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["15/6/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CESAR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20770"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SAN MARTIN", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894725"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["7/6/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CESAR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20013"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["AGUSTIN CODAZZI", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894726"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5/6/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CESAR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20013"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["AGUSTIN CODAZZI", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894727"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2/6/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CESAR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20013"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["AGUSTIN CODAZZI", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894728"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["28/5/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["META", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["VILLAVICENCIO", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["F", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894729"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["22/5/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CESAR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20013"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["AGUSTIN CODAZZI", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["F", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894730"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["21/5/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CESAR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20013"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["AGUSTIN CODAZZI", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894731"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["12/5/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["META", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["VILLAVICENCIO", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["F", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894732"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["30/4/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["STA MARTA D.E.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SANTA MARTA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["57"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894733"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["30/4/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["STA MARTA D.E.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SANTA MARTA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["F", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894734"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["30/4/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["STA MARTA D.E.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SANTA MARTA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["F", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894735"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["30/4/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["STA MARTA D.E.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SANTA MARTA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894736"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["27/4/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CARTAGENA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CARTAGENA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894737"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["18/4/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["STA MARTA D.E.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SANTA MARTA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894738"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["18/3/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["STA MARTA D.E.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SANTA MARTA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894739"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["18/3/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MAGDALENA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47189"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CIENAGA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["F", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894740"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["9/2/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MAGDALENA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47288"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["FUNDACION", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["F", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894741"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["19/1/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CAUCA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19548"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["PIENDAMO", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["24/8/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{178.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4894742"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4/1/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MAGDALENA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47189"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CIENAGA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[True, 23, 1], {1, 23 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[False, 23, 1], {1, 23 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[23, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[23, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 23, 1], {1, 23 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 23, 1], {1, 23 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1273., {319.7203125, 325.2796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1273., {319.7203125, 325.2796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.838922605784911*^9, {3.838922716137788*^9, 3.838922736125813*^9}, 
   3.8389255439436703`*^9, 3.8389256397238407`*^9, 3.838925783006604*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"ba6e09cb-d72f-46ae-9647-63bc7397bbbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataSet", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.838922744562909*^9, 3.8389227475433807`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"ea7d964f-aef0-4f06-ae07-7bdc26b20971"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "fecha reporte web" -> "24/8/2021 0:00:00", "ID de caso" -> 4894723, 
       "Fecha de notificaci\[OAcute]n" -> "18/6/2021 0:00:00", 
       "C\[OAcute]digo DIVIPOLA departamento" -> 20, "Nombre departamento" -> 
       "CESAR", "C\[OAcute]digo DIVIPOLA municipio" -> 20770, 
       "Nombre municipio" -> "SAN MARTIN", "Edad" -> 44, 
       "Unidad de medida de edad" -> 1, "Sexo" -> "M", "Tipo de contagio" -> 
       "En estudio", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
       "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> "", 
       "Nombre del pa\[IAcute]s" -> "", "Recuperado" -> "Activo", 
       "Fecha de inicio de s\[IAcute]ntomas" -> "14/6/2021 0:00:00", 
       "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
       "29/6/2021 0:00:00", "Fecha de recuperaci\[OAcute]n" -> "", 
       "Tipo de recuperaci\[OAcute]n" -> "", "Pertenencia \[EAcute]tnica" -> 
       "", "Nombre del grupo \[EAcute]tnico" -> ""], "AllowEmbedding" -> True,
      "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[313.6], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 23], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[313.6], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 23], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     23, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 4, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C\[OAcute]digo DIVIPOLA departamento", 
                  Style[
                  "C\[OAcute]digo DIVIPOLA departamento", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["C\[OAcute]digo DIVIPOLA departamento"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nombre departamento", 
                  Style[
                  "Nombre departamento", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Nombre departamento"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Nombre departamento"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["CESAR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C\[OAcute]digo DIVIPOLA municipio", 
                  Style[
                  "C\[OAcute]digo DIVIPOLA municipio", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["C\[OAcute]digo DIVIPOLA municipio"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20770"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nombre municipio", 
                  Style[
                  "Nombre municipio", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Nombre municipio"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Nombre municipio"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["SAN MARTIN", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Edad", 
                  Style[
                  "Edad", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Edad"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Edad"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Unidad de medida de edad", 
                  Style[
                  "Unidad de medida de edad", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Unidad de medida de edad"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Unidad de medida de edad"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sexo", 
                  Style[
                  "Sexo", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Sexo"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Sexo"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Tipo de contagio", 
                  Style[
                  "Tipo de contagio", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Tipo de contagio"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Tipo de contagio"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["En estudio", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Tipo de contagio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ubicaci\[OAcute]n del caso", 
                  Style[
                  "Ubicaci\[OAcute]n del caso", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Ubicaci\[OAcute]n del caso"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Ubicaci\[OAcute]n del caso"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Casa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Ubicaci\[OAcute]n del caso"]}, "Item", False], "Mouse"],
               ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Estado", 
                  Style[
                  "Estado", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Estado"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Estado"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Leve", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Estado"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C\[OAcute]digo ISO del pa\[IAcute]s", 
                  Style[
                  "C\[OAcute]digo ISO del pa\[IAcute]s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["C\[OAcute]digo ISO del pa\[IAcute]s"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["C\[OAcute]digo ISO del pa\[IAcute]s"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["C\[OAcute]digo ISO del pa\[IAcute]s"]}, "Item", False], 
               "Mouse"], ImageSize -> {{0., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nombre del pa\[IAcute]s", 
                  Style[
                  "Nombre del pa\[IAcute]s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Nombre del pa\[IAcute]s"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Nombre del pa\[IAcute]s"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Nombre del pa\[IAcute]s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{0., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Recuperado", 
                  Style[
                  "Recuperado", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Recuperado"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Recuperado"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Activo", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Recuperado"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Fecha de inicio de s\[IAcute]ntomas", 
                  Style[
                  "Fecha de inicio de s\[IAcute]ntomas", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Fecha de inicio de s\[IAcute]ntomas"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Fecha de inicio de s\[IAcute]ntomas"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["14/6/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Fecha de inicio de s\[IAcute]ntomas"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Fecha de muerte", 
                  Style[
                  "Fecha de muerte", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Fecha de muerte"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Fecha de muerte"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Fecha de muerte"]}, "Item", False], "Mouse"], 
              ImageSize -> {{0., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Fecha de diagn\[OAcute]stico", 
                  Style[
                  "Fecha de diagn\[OAcute]stico", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Fecha de diagn\[OAcute]stico"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Fecha de diagn\[OAcute]stico"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["29/6/2021 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Fecha de diagn\[OAcute]stico"]}, "Item", False], 
               "Mouse"], ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Fecha de recuperaci\[OAcute]n", 
                  Style[
                  "Fecha de recuperaci\[OAcute]n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Fecha de recuperaci\[OAcute]n"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Fecha de recuperaci\[OAcute]n"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Fecha de recuperaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{0., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Tipo de recuperaci\[OAcute]n", 
                  Style[
                  "Tipo de recuperaci\[OAcute]n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Tipo de recuperaci\[OAcute]n"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Tipo de recuperaci\[OAcute]n"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Tipo de recuperaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], ImageSize -> {{0., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Pertenencia \[EAcute]tnica", 
                  Style[
                  "Pertenencia \[EAcute]tnica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Pertenencia \[EAcute]tnica"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Pertenencia \[EAcute]tnica"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Pertenencia \[EAcute]tnica"]}, "Item", False], "Mouse"],
               ImageSize -> {{0., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nombre del grupo \[EAcute]tnico", 
                  Style[
                  "Nombre del grupo \[EAcute]tnico", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][{
                    Key["Nombre del grupo \[EAcute]tnico"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Nombre del grupo \[EAcute]tnico"]}, "RowHeader", False],
                "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][{
                 Key["Nombre del grupo \[EAcute]tnico"]}, "Item", False], 
               "Mouse"], ImageSize -> {{0., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 23, 1], {1, 23 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 23, 1], {1, 23 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 4, "\[Dash]", 23, " of ", 
                    Style[23, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 4, "\[Dash]", 23, " of ", 
                    Style[23, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 23, 1], {1, 23 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 23, 1], {1, 23 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "f12e4133-999f-4d2e-8f18-558a9e9fbb2c", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "f12e4133-999f-4d2e-8f18-558a9e9fbb2c"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{540., {296.2203125, 301.7796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{540., {296.2203125, 301.7796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8389227483803587`*^9, 3.838925689645899*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"fb59c28c-3185-4d1b-9ea6-a47cda0e983c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataSet", "[", 
  RowBox[{"1", ";;", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.838922776557262*^9, 3.838922777054818*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"71b08a63-7112-4b5d-81b8-f51c067474bc"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "fecha reporte web" -> "6/3/2020 0:00:00", "ID de caso" -> 1, 
        "Fecha de notificaci\[OAcute]n" -> "2/3/2020 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 11, "Nombre departamento" -> 
        "BOGOTA", "C\[OAcute]digo DIVIPOLA municipio" -> 11001, 
        "Nombre municipio" -> "BOGOTA", "Edad" -> 19, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "F", "Tipo de contagio" -> 
        "Importado", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> 380, 
        "Nombre del pa\[IAcute]s" -> "ITALIA", "Recuperado" -> "Recuperado", 
        "Fecha de inicio de s\[IAcute]ntomas" -> "27/2/2020 0:00:00", 
        "Fecha de muerte" -> "", "Fecha de diagn\[OAcute]stico" -> 
        "6/3/2020 0:00:00", "Fecha de recuperaci\[OAcute]n" -> 
        "13/3/2020 0:00:00", "Tipo de recuperaci\[OAcute]n" -> "PCR", 
        "Pertenencia \[EAcute]tnica" -> 6, "Nombre del grupo \[EAcute]tnico" -> 
        ""], 
       Association[
       "fecha reporte web" -> "9/3/2020 0:00:00", "ID de caso" -> 2, 
        "Fecha de notificaci\[OAcute]n" -> "6/3/2020 0:00:00", 
        "C\[OAcute]digo DIVIPOLA departamento" -> 76, "Nombre departamento" -> 
        "VALLE", "C\[OAcute]digo DIVIPOLA municipio" -> 76111, 
        "Nombre municipio" -> "BUGA", "Edad" -> 34, 
        "Unidad de medida de edad" -> 1, "Sexo" -> "M", "Tipo de contagio" -> 
        "Importado", "Ubicaci\[OAcute]n del caso" -> "Casa", "Estado" -> 
        "Leve", "C\[OAcute]digo ISO del pa\[IAcute]s" -> 724, 
        "Nombre del pa\[IAcute]s" -> "ESPA\[CapitalNTilde]A", "Recuperado" -> 
        "Recuperado", "Fecha de inicio de s\[IAcute]ntomas" -> 
        "4/3/2020 0:00:00", "Fecha de muerte" -> "", 
        "Fecha de diagn\[OAcute]stico" -> "9/3/2020 0:00:00", 
        "Fecha de recuperaci\[OAcute]n" -> "19/3/2020 0:00:00", 
        "Tipo de recuperaci\[OAcute]n" -> "PCR", "Pertenencia \[EAcute]tnica" -> 
        5, "Nombre del grupo \[EAcute]tnico" -> ""]}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "fecha reporte web"} -> 1, {All, "ID de caso"} -> 
        1, {All, "Fecha de notificaci\[OAcute]n"} -> 
        1, {All, "C\[OAcute]digo DIVIPOLA departamento"} -> 
        1, {All, "Nombre departamento"} -> 
        1, {All, "C\[OAcute]digo DIVIPOLA municipio"} -> 
        1, {All, "Nombre municipio"} -> 1, {All, "Edad"} -> 
        1, {All, "Unidad de medida de edad"} -> 1, {All, "Sexo"} -> 
        1, {All, "Tipo de contagio"} -> 
        1, {All, "Ubicaci\[OAcute]n del caso"} -> 1, {All, "Estado"} -> 
        1, {All, "C\[OAcute]digo ISO del pa\[IAcute]s"} -> 
        1, {All, "Nombre del pa\[IAcute]s"} -> 1, {All, "Recuperado"} -> 
        1, {All, "Fecha de inicio de s\[IAcute]ntomas"} -> 
        1, {All, "Fecha de muerte"} -> 
        1, {All, "Fecha de diagn\[OAcute]stico"} -> 
        1, {All, "Fecha de recuperaci\[OAcute]n"} -> 
        1, {All, "Tipo de recuperaci\[OAcute]n"} -> 
        1, {All, "Pertenencia \[EAcute]tnica"} -> 
        1, {All, "Nombre del grupo \[EAcute]tnico"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "fecha reporte web" -> 
            TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
            "ID de caso" -> TypeSystem`PackageScope`AtomShape[34], 
            "Fecha de notificaci\[OAcute]n" -> 
            TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
            "C\[OAcute]digo DIVIPOLA departamento" -> 
            TypeSystem`PackageScope`AtomShape[34], "Nombre departamento" -> 
            TypeSystem`PackageScope`AtomShape[67.2], 
            "C\[OAcute]digo DIVIPOLA municipio" -> 
            TypeSystem`PackageScope`AtomShape[34], "Nombre municipio" -> 
            TypeSystem`PackageScope`AtomShape[67.2], "Edad" -> 
            TypeSystem`PackageScope`AtomShape[34], "Unidad de medida de edad" -> 
            TypeSystem`PackageScope`AtomShape[34], "Sexo" -> 
            TypeSystem`PackageScope`AtomShape[33.6], "Tipo de contagio" -> 
            TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
            "Ubicaci\[OAcute]n del caso" -> 
            TypeSystem`PackageScope`AtomShape[44.800000000000004`], "Estado" -> 
            TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
            "C\[OAcute]digo ISO del pa\[IAcute]s" -> 
            TypeSystem`PackageScope`AtomShape[34], "Nombre del pa\[IAcute]s" -> 
            TypeSystem`PackageScope`AtomShape[67.2], "Recuperado" -> 
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
            "Fecha de inicio de s\[IAcute]ntomas" -> 
            TypeSystem`PackageScope`AtomShape[190.4], "Fecha de muerte" -> 
            TypeSystem`PackageScope`AtomShape[33.6], 
            "Fecha de diagn\[OAcute]stico" -> 
            TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
            "Fecha de recuperaci\[OAcute]n" -> 
            TypeSystem`PackageScope`AtomShape[190.4], 
            "Tipo de recuperaci\[OAcute]n" -> 
            TypeSystem`PackageScope`AtomShape[33.6], 
            "Pertenencia \[EAcute]tnica" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "Nombre del grupo \[EAcute]tnico" -> 
            TypeSystem`PackageScope`AtomShape[33.6]]], 
          DirectedInfinity[1], 10, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "fecha reporte web", "ID de caso", "Fecha de notificaci\[OAcute]n", 
         "C\[OAcute]digo DIVIPOLA departamento", "Nombre departamento", 
         "C\[OAcute]digo DIVIPOLA municipio", "Nombre municipio", "Edad", 
         "Unidad de medida de edad", "Sexo", "Tipo de contagio", 
         "Ubicaci\[OAcute]n del caso", "Estado", 
         "C\[OAcute]digo ISO del pa\[IAcute]s", "Nombre del pa\[IAcute]s", 
         "Recuperado", "Fecha de inicio de s\[IAcute]ntomas", 
         "Fecha de muerte", "Fecha de diagn\[OAcute]stico", 
         "Fecha de recuperaci\[OAcute]n", "Tipo de recuperaci\[OAcute]n", 
         "Pertenencia \[EAcute]tnica", "Nombre del grupo \[EAcute]tnico"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 2], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "fecha reporte web"} -> 1, {All, "ID de caso"} -> 
        1, {All, "Fecha de notificaci\[OAcute]n"} -> 
        1, {All, "C\[OAcute]digo DIVIPOLA departamento"} -> 
        1, {All, "Nombre departamento"} -> 
        1, {All, "C\[OAcute]digo DIVIPOLA municipio"} -> 
        1, {All, "Nombre municipio"} -> 1, {All, "Edad"} -> 
        1, {All, "Unidad de medida de edad"} -> 1, {All, "Sexo"} -> 
        1, {All, "Tipo de contagio"} -> 
        1, {All, "Ubicaci\[OAcute]n del caso"} -> 1, {All, "Estado"} -> 
        1, {All, "C\[OAcute]digo ISO del pa\[IAcute]s"} -> 
        1, {All, "Nombre del pa\[IAcute]s"} -> 1, {All, "Recuperado"} -> 
        1, {All, "Fecha de inicio de s\[IAcute]ntomas"} -> 
        1, {All, "Fecha de muerte"} -> 
        1, {All, "Fecha de diagn\[OAcute]stico"} -> 
        1, {All, "Fecha de recuperaci\[OAcute]n"} -> 
        1, {All, "Tipo de recuperaci\[OAcute]n"} -> 
        1, {All, "Pertenencia \[EAcute]tnica"} -> 
        1, {All, "Nombre del grupo \[EAcute]tnico"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "fecha reporte web" -> 
            TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
            "ID de caso" -> TypeSystem`PackageScope`AtomShape[34], 
            "Fecha de notificaci\[OAcute]n" -> 
            TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
            "C\[OAcute]digo DIVIPOLA departamento" -> 
            TypeSystem`PackageScope`AtomShape[34], "Nombre departamento" -> 
            TypeSystem`PackageScope`AtomShape[67.2], 
            "C\[OAcute]digo DIVIPOLA municipio" -> 
            TypeSystem`PackageScope`AtomShape[34], "Nombre municipio" -> 
            TypeSystem`PackageScope`AtomShape[67.2], "Edad" -> 
            TypeSystem`PackageScope`AtomShape[34], "Unidad de medida de edad" -> 
            TypeSystem`PackageScope`AtomShape[34], "Sexo" -> 
            TypeSystem`PackageScope`AtomShape[33.6], "Tipo de contagio" -> 
            TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
            "Ubicaci\[OAcute]n del caso" -> 
            TypeSystem`PackageScope`AtomShape[44.800000000000004`], "Estado" -> 
            TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
            "C\[OAcute]digo ISO del pa\[IAcute]s" -> 
            TypeSystem`PackageScope`AtomShape[34], "Nombre del pa\[IAcute]s" -> 
            TypeSystem`PackageScope`AtomShape[67.2], "Recuperado" -> 
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
            "Fecha de inicio de s\[IAcute]ntomas" -> 
            TypeSystem`PackageScope`AtomShape[190.4], "Fecha de muerte" -> 
            TypeSystem`PackageScope`AtomShape[33.6], 
            "Fecha de diagn\[OAcute]stico" -> 
            TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
            "Fecha de recuperaci\[OAcute]n" -> 
            TypeSystem`PackageScope`AtomShape[190.4], 
            "Tipo de recuperaci\[OAcute]n" -> 
            TypeSystem`PackageScope`AtomShape[33.6], 
            "Pertenencia \[EAcute]tnica" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "Nombre del grupo \[EAcute]tnico" -> 
            TypeSystem`PackageScope`AtomShape[33.6]]], 
          DirectedInfinity[1], 10, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "fecha reporte web", "ID de caso", "Fecha de notificaci\[OAcute]n", 
         "C\[OAcute]digo DIVIPOLA departamento", "Nombre departamento", 
         "C\[OAcute]digo DIVIPOLA municipio", "Nombre municipio", "Edad", 
         "Unidad de medida de edad", "Sexo", "Tipo de contagio", 
         "Ubicaci\[OAcute]n del caso", "Estado", 
         "C\[OAcute]digo ISO del pa\[IAcute]s", "Nombre del pa\[IAcute]s", 
         "Recuperado", "Fecha de inicio de s\[IAcute]ntomas", 
         "Fecha de muerte", "Fecha de diagn\[OAcute]stico", 
         "Fecha de recuperaci\[OAcute]n", "Tipo de recuperaci\[OAcute]n", 
         "Pertenencia \[EAcute]tnica", "Nombre del grupo \[EAcute]tnico"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 10, "DataRowCount" -> 2, "DataColumnCount" -> 
     23, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["fecha reporte web", 
                  Style[
                  "fecha reporte web", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "fecha reporte web"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "fecha reporte web"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ID de caso", 
                  Style[
                  "ID de caso", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ID de caso"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ID de caso"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Fecha de notificaci\[OAcute]n", 
                  Style[
                  "Fecha de notificaci\[OAcute]n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Fecha de notificaci\[OAcute]n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Fecha de notificaci\[OAcute]n"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C\[OAcute]digo DIVIPOLA departamento", 
                  Style[
                  "C\[OAcute]digo DIVIPOLA departamento", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "C\[OAcute]digo DIVIPOLA departamento"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "C\[OAcute]digo DIVIPOLA departamento"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nombre departamento", 
                  Style[
                  "Nombre departamento", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Nombre departamento"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Nombre departamento"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C\[OAcute]digo DIVIPOLA municipio", 
                  Style[
                  "C\[OAcute]digo DIVIPOLA municipio", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "C\[OAcute]digo DIVIPOLA municipio"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "C\[OAcute]digo DIVIPOLA municipio"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nombre municipio", 
                  Style[
                  "Nombre municipio", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Nombre municipio"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Nombre municipio"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Edad", 
                  Style[
                  "Edad", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Edad"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Edad"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Unidad de medida de edad", 
                  Style[
                  "Unidad de medida de edad", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Unidad de medida de edad"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Unidad de medida de edad"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sexo", 
                  Style[
                  "Sexo", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Sexo"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Sexo"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["6/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BOGOTA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BOGOTA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["F", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["9/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["fecha reporte web"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ID de caso"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Fecha de notificaci\[OAcute]n"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["C\[OAcute]digo DIVIPOLA departamento"]}, "Item", False],
                "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["VALLE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Nombre departamento"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["76111"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["C\[OAcute]digo DIVIPOLA municipio"]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BUGA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Nombre municipio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Unidad de medida de edad"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Sexo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[True, 23, 1], {1, 23 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[False, 23, 1], {1, 23 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[23, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[23, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 23, 1], {1, 23 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 23, 1], {1, 23 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1103., {67.7203125, 73.2796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1103., {67.7203125, 73.2796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.838922777536336*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"109d76e5-9160-4629-953e-e74de11dfb80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataSet", "[", 
  RowBox[{"All", ",", "\"\<fecha reporte web\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.83892278429624*^9, 3.838922819104792*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"facdef7e-da6c-4292-ae07-077fc90d5fbf"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {
      "6/3/2020 0:00:00", "9/3/2020 0:00:00", "9/3/2020 0:00:00", 
       "11/3/2020 0:00:00", "11/3/2020 0:00:00", "11/3/2020 0:00:00", 
       "11/3/2020 0:00:00", "11/3/2020 0:00:00", "11/3/2020 0:00:00", 
       "12/3/2020 0:00:00", "12/3/2020 0:00:00", "12/3/2020 0:00:00", 
       "12/3/2020 0:00:00", "13/3/2020 0:00:00", "13/3/2020 0:00:00", 
       "13/3/2020 0:00:00", "14/3/2020 0:00:00", "14/3/2020 0:00:00", 
       "14/3/2020 0:00:00", "14/3/2020 0:00:00", "14/3/2020 0:00:00", 
       "14/3/2020 0:00:00", "14/3/2020 0:00:00", "14/3/2020 0:00:00", 
       "13/3/2020 0:00:00", "15/3/2020 0:00:00", "15/3/2020 0:00:00", 
       "14/3/2020 0:00:00", "12/3/2020 0:00:00", "15/3/2020 0:00:00", 
       "13/3/2020 0:00:00", "15/3/2020 0:00:00", "15/3/2020 0:00:00", 
       "15/3/2020 0:00:00", "14/3/2020 0:00:00", "14/3/2020 0:00:00", 
       "14/3/2020 0:00:00", "14/3/2020 0:00:00", "14/3/2020 0:00:00", 
       "15/3/2020 0:00:00", "14/3/2020 0:00:00", "14/3/2020 0:00:00", 
       "14/3/2020 0:00:00", "14/3/2020 0:00:00", "15/3/2020 0:00:00", 
       "15/3/2020 0:00:00", "15/3/2020 0:00:00", "16/3/2020 0:00:00", 
       "15/3/2020 0:00:00", "15/3/2020 0:00:00", "16/3/2020 0:00:00", 
       "15/3/2020 0:00:00", "15/3/2020 0:00:00", "15/3/2020 0:00:00", 
       "16/3/2020 0:00:00", "16/3/2020 0:00:00", "16/3/2020 0:00:00", 
       "16/3/2020 0:00:00", "16/3/2020 0:00:00", "16/3/2020 0:00:00", 
       "16/3/2020 0:00:00", "16/3/2020 0:00:00", "16/3/2020 0:00:00", 
       "16/3/2020 0:00:00", "16/3/2020 0:00:00", "17/3/2020 0:00:00", 
       "17/3/2020 0:00:00", "17/3/2020 0:00:00", "17/3/2020 0:00:00", 
       "17/3/2020 0:00:00", "17/3/2020 0:00:00", "17/3/2020 0:00:00", 
       "17/3/2020 0:00:00", "17/3/2020 0:00:00", "17/3/2020 0:00:00", 
       "17/3/2020 0:00:00", "17/3/2020 0:00:00", "17/3/2020 0:00:00", 
       "17/3/2020 0:00:00", "17/3/2020 0:00:00", "17/3/2020 0:00:00", 
       "17/3/2020 0:00:00", "17/3/2020 0:00:00", "17/3/2020 0:00:00", 
       "17/3/2020 0:00:00", "17/3/2020 0:00:00", "17/3/2020 0:00:00", 
       "17/3/2020 0:00:00", "15/3/2020 0:00:00", "17/3/2020 0:00:00", 
       "17/3/2020 0:00:00", "18/3/2020 0:00:00", "18/3/2020 0:00:00", 
       "18/3/2020 0:00:00", "18/3/2020 0:00:00", "18/3/2020 0:00:00", 
       "18/3/2020 0:00:00", "18/3/2020 0:00:00", "18/3/2020 0:00:00"}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[33, 3, 99, 190.4], 60, 3, {
       All}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 99], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[33, 3, 99, 190.4], 60, 3, {
       All}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 99], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 33, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["6/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["9/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["9/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["11/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["11/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["11/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["11/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["11/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["11/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["12/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["12/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["12/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["12/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["13/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["13/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["13/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{21}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{22}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{23}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{24}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["13/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{25}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{26}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{27}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{28}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["12/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{29}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{30}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["13/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{31}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{32}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{33}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{34}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{35}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{36}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{37}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{38}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{39}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{40}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{41}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{42}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{43}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["14/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{44}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{45}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{46}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{47}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["16/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{48}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{49}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{50}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["16/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{51}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{52}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{53}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["15/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{54}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["16/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{55}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["16/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{56}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["16/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{57}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["16/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{58}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["16/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{59}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["16/3/2020 0:00:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{60}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 33, 1], {1, 33 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 33, 1], {1, 33 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"elements ", 1, "\[Dash]", 60, " of ", 
                    Style[99, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"elements ", 1, "\[Dash]", 60, " of ", 
                    Style[99, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {All}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 33, 1], {1, 33 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 33, 1], {1, 33 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{616., {296.2203125, 301.7796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{616., {296.2203125, 301.7796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.838922800809163*^9, 3.838922819771914*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"d71d91cb-3c7b-4d8d-a0f4-c3b0e74c2075"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataSet", "[", 
  RowBox[{"All", ",", "\"\<Edad\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.838925580522188*^9, 3.838925589601535*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"a66905fa-ff76-43d7-9ac5-1c733fe49063"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {44, 27, 36, 29, 33, 34, 56, 44, 29, 57, 53, 51, 54, 76, 
      47, 11, 47, 92, 23, 42}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[2, 10, 20, 34], 20, 10, {
       All}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 20], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[2, 10, 20, 34], 20, 10, {
       All}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 20], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 2, "DataColumnCount" -> 
     10, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["57"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{421., {33.7203125, 39.2796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{421., {33.7203125, 39.2796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.838925590264494*^9, 3.8389256462887907`*^9, 
  3.838925793017167*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"4f1d493d-f580-4ba1-9ee1-b5bc5a81acc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataSet", "[", 
  RowBox[{"1", ",", "\"\<Edad\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.838925858142289*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"30df372e-6e99-48cc-a09f-7038c395e230"],

Cell[BoxData["44"], "Output",
 CellChangeTimes->{3.838925859198819*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"db50f7fb-c5c9-4e78-925f-6d729330ecb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "20"}], ";;", 
     RowBox[{"-", "1"}]}], ",", "8"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.838925796835989*^9, 3.838925820691104*^9}, {
  3.8389258860102367`*^9, 3.838925893254592*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"0b00e7b4-0fb5-4e3d-8b80-69de4a14b931"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "44", ",", "27", ",", "36", ",", "29", ",", "33", ",", "34", ",", "56", ",",
    "44", ",", "29", ",", "57", ",", "53", ",", "51", ",", "54", ",", "76", 
   ",", "47", ",", "11", ",", "47", ",", "92", ",", "23", ",", "42"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.838925821763372*^9, 3.8389258943688307`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"5483ed59-c669-4a42-b94a-7fc93441f565"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.83892561246454*^9, 
  3.8389256133437443`*^9}},ExpressionUUID->"665f461a-1453-4d88-b974-\
d17111de3621"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{
   "Import", "[", "\"\</home/lina/Downloads/2020-03-14.xlsx\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.838926845228459*^9, 3.838926853079249*^9}, {
  3.838927054153726*^9, 3.838927073749736*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"d1ae8867-29e6-4cc2-a43c-b90999e376ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.838927106530608*^9, 3.838927119820978*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"7beb25df-beb9-4b5d-a44d-694c7e5c4749"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "23", ",", "18"}], "}"}]], "Output",
 CellChangeTimes->{{3.838927108516356*^9, 3.838927120299876*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"589a14b2-9286-4aaa-84f6-ecdd5e7d24d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.838927151299474*^9, 3.838927157590167*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"496fcbf8-23bc-4b66-9a16-74d17be9452f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ID de caso\"\>", ",", "\<\"Fecha de diagn\[OAcute]stico \"\>", 
   ",", "\<\"Ciudad de ubicaci\[OAcute]n\"\>", ",", "\<\"0 a 9\"\>", 
   ",", "\<\"10 a 19\"\>", ",", "\<\"20 a 29\"\>", ",", "\<\"30 a 39\"\>", 
   ",", "\<\"40 a 49\"\>", ",", "\<\"50 a 59\"\>", ",", "\<\"60 a 69\"\>", 
   ",", "\<\"70 a 79\"\>", ",", "\<\"80 a 89\"\>", 
   ",", "\<\"90 o m\[AAcute]s\"\>", ",", "\<\"Femenino\"\>", 
   ",", "\<\"Masculino\"\>", ",", "\<\"Importado\"\>", 
   ",", "\<\"Asociado\"\>", ",", "\<\"En estudio\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8389271580322027`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"11cbca56-ccf7-4101-9138-f67d94f90fac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataSet", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"d", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "20"}], ";;", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.838922594631035*^9, 3.8389226301188593`*^9}, {
   3.838922664025052*^9, 3.83892273447639*^9}, 3.838925541910418*^9, {
   3.838925633739374*^9, 3.8389256389158916`*^9}, {3.838927126229967*^9, 
   3.838927127019228*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"6bfc474c-9124-468d-a937-06c19b3e52cb"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"-\\\", \\\"20\\\"}]\\) \
through \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"ID de caso\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Fecha de \
diagn\[OAcute]stico \\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Ciudad de ubicaci\
\[OAcute]n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"0 a 9\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"10 a 19\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"20 a 29\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"30 a 39\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"40 a \
49\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"50 a 59\\\\\\\"\\\", \\\",\\\", \\\"\\\
\\\\\"60 a 69\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"8\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \
RowBox[{\\\"DateObject\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"2020\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\",\
\\\", \\\"\\\\\\\"Instant\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\
\"\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"5.`\\\"}]}], \\\"]\\\"}], \
\\\",\\\", \\\"\\\\\\\"Bogot\[AAcute]\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"X\\\\\\\"\\\", \\\",\\\", \\\
\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\
\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2.`\\\", \\\",\\\", RowBox[{\\\"DateObject\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"2020\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0.`\\\"}], \\\"}\\\"}], \\\",\\\", \\\"\\\\\\\"Instant\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"5.`\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"\\\\\\\"Buga\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"X\\\\\\\"\\\", \\\
\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"8\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"9.`\\\", \\\",\\\", \
RowBox[{\\\"DateObject\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"2020\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\",\
\\\", \\\"\\\\\\\"Instant\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\
\"\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"5.`\\\"}]}], \\\"]\\\"}], \
\\\",\\\", \\\"\\\\\\\"Bogot\[AAcute]\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"X\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\
\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\
\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"13\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\"}\\\"}]\\).\"", 2, 70, 30, 33341761774910464199, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.838927093430554*^9, 3.838927127327116*^9},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"8e04fb3b-31b2-4f5e-95c1-c91652c71c67"],

Cell[BoxData[
 TemplateBox[{
  "AssociationThread", "idim", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"ID de caso\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Fecha de diagn\[OAcute]stico \\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Ciudad de ubicaci\[OAcute]n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"0 \
a 9\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"10 a 19\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"20 a 29\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"30 a 39\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"40 a 49\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"50 a \
59\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"60 a 69\\\\\\\"\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\) and \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"ID de caso\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Fecha de diagn\[OAcute]stico \\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Ciudad de ubicaci\[OAcute]n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"0 \
a 9\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"10 a 19\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"20 a 29\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"30 a 39\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"40 a 49\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"50 a \
59\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"60 a 69\\\\\\\"\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \
RowBox[{\\\"DateObject\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"2020\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\",\
\\\", \\\"\\\\\\\"Instant\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\
\"\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"5.`\\\"}]}], \\\"]\\\"}], \
\\\",\\\", \\\"\\\\\\\"Bogot\[AAcute]\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"X\\\\\\\"\\\", \\\",\\\", \\\
\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\
\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2.`\\\", \\\",\\\", RowBox[{\\\"DateObject\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"2020\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0.`\\\"}], \\\"}\\\"}], \\\",\\\", \\\"\\\\\\\"Instant\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"5.`\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"\\\\\\\"Buga\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"X\\\\\\\"\\\", \\\
\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"8\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"9.`\\\", \\\",\\\", \
RowBox[{\\\"DateObject\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"2020\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\",\
\\\", \\\"\\\\\\\"Instant\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\
\"\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"5.`\\\"}]}], \\\"]\\\"}], \
\\\",\\\", \\\"\\\\\\\"Bogot\[AAcute]\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"X\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\
\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\
\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"13\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\"}\\\"}]\\) must have the same length.\"", 2, 70, 31, 33341761774910464199,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.838927093430554*^9, 3.838927127338612*^9},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"c48fdcec-a7f1-40af-996e-f5453c39648a"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", \
RowBox[{RowBox[{\\\"\\\\\\\"ID de caso\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\
\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"Fecha de diagn\[OAcute]stico \
\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \
\\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"Ciudad de ubicaci\[OAcute]n\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\
\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"0 a 9\\\\\\\"\\\", \
\\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"10 a \
19\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \
\\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"20 a 29\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"30 a 39\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\
\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"40 a 49\\\\\\\"\\\", \\\"\[Rule]\\\
\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"50 a 59\\\\\\\"\\\", \\\"\
\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"60 a \
69\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \
\\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"70 a 79\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"80 a 89\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\
\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"90 o m\[AAcute]s\\\\\\\"\\\", \\\"\
\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"Femenino\\\
\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \
\\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"Masculino\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\
\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\
\\\\\\\"Importado\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\
\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"Asociado\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\
\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"En estudio\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\
\\\"}]}]}]}], \\\"\[RightAssociation]\\\"}]\\) cannot be used as a part \
specification.\"", 2, 70, 32, 33341761774910464199, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.838927093430554*^9, 3.838927127347739*^9},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"5056b6c7-87d7-4537-a74a-d0f81294e875"],

Cell[BoxData[
 TemplateBox[{
  "AssociationThread", "idim", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"ID de caso\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Fecha de diagn\[OAcute]stico \\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Ciudad de ubicaci\[OAcute]n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"0 \
a 9\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"10 a 19\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"20 a 29\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"30 a 39\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"40 a 49\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"50 a \
59\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"60 a 69\\\\\\\"\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\) and \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"ID de caso\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Fecha de diagn\[OAcute]stico \\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Ciudad de ubicaci\[OAcute]n\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"0 \
a 9\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"10 a 19\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"20 a 29\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"30 a 39\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"40 a 49\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"50 a \
59\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"60 a 69\\\\\\\"\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \
RowBox[{\\\"DateObject\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"2020\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\",\
\\\", \\\"\\\\\\\"Instant\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\
\"\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"5.`\\\"}]}], \\\"]\\\"}], \
\\\",\\\", \\\"\\\\\\\"Bogot\[AAcute]\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"X\\\\\\\"\\\", \\\",\\\", \\\
\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\
\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2.`\\\", \\\",\\\", RowBox[{\\\"DateObject\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"2020\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0.`\\\"}], \\\"}\\\"}], \\\",\\\", \\\"\\\\\\\"Instant\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"5.`\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"\\\\\\\"Buga\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"X\\\\\\\"\\\", \\\
\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"8\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"9.`\\\", \\\",\\\", \
RowBox[{\\\"DateObject\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"2020\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\",\
\\\", \\\"\\\\\\\"Instant\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\
\"\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"5.`\\\"}]}], \\\"]\\\"}], \
\\\",\\\", \\\"\\\\\\\"Bogot\[AAcute]\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"X\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\
\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\
\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"13\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\"}\\\"}]\\) must have the same length.\"", 2, 70, 33, 33341761774910464199,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.838927093430554*^9, 3.8389271273554296`*^9},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"6ccefe27-285e-4ed4-850d-9a15ce0225ff"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", \
RowBox[{RowBox[{\\\"\\\\\\\"ID de caso\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\
\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"Fecha de diagn\[OAcute]stico \
\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \
\\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"Ciudad de ubicaci\[OAcute]n\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\
\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"0 a 9\\\\\\\"\\\", \
\\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"10 a \
19\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \
\\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"20 a 29\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"30 a 39\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\
\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"40 a 49\\\\\\\"\\\", \\\"\[Rule]\\\
\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"50 a 59\\\\\\\"\\\", \\\"\
\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"60 a \
69\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \
\\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"70 a 79\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"80 a 89\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\
\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"90 o m\[AAcute]s\\\\\\\"\\\", \\\"\
\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"Femenino\\\
\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \
\\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"Masculino\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\"20\\\
\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", RowBox[{\\\"\
\\\\\\\"Importado\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\"-\\\", \\\
\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"Asociado\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{RowBox[{\\\
\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}]}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"En estudio\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"20\\\"}], \\\";;\\\", RowBox[{\\\"-\\\", \\\"1\
\\\"}]}]}]}], \\\"\[RightAssociation]\\\"}]\\) cannot be used as a part \
specification.\"", 2, 70, 34, 33341761774910464199, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.838927093430554*^9, 3.83892712736373*^9},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"c7a9627e-bc2f-4df6-9e7a-86209c6acaf9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> Part[
       AssociationThread[{
        "ID de caso", "Fecha de diagn\[OAcute]stico ", 
         "Ciudad de ubicaci\[OAcute]n", "0 a 9", "10 a 19", "20 a 29", 
         "30 a 39", "40 a 49", "50 a 59", "60 a 69", "70 a 79", "80 a 89", 
         "90 o m\[AAcute]s", "Femenino", "Masculino", "Importado", "Asociado",
          "En estudio"}, {{{
          "ID de caso", "Fecha de diagn\[OAcute]stico ", 
           "Ciudad de ubicaci\[OAcute]n", "0 a 9", "10 a 19", "20 a 29", 
           "30 a 39", "40 a 49", "50 a 59", "60 a 69", "70 a 79", "80 a 89", 
           "90 o m\[AAcute]s", "Femenino", "Masculino", "Importado", 
           "Asociado", "En estudio"}, {1., 
           DateObject[{2020, 3, 6, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Bogot\[AAcute]", "", "X", "", "", "", "", "", "", "", "", "X", "",
            "X", "", ""}, {2., 
           DateObject[{2020, 3, 9, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Buga", "", "", "", "X", "", "", "", "", "", "", "", "X", "X", "", 
           ""}, {3., 
           DateObject[{2020, 3, 9, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Medell\[IAcute]n", "", "", "", "", "", "X", "", "", "", "", "X", 
           "", "X", "", ""}, {4., 
           DateObject[{2020, 3, 11, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Medell\[IAcute]n", "", "", "", "", "", "X", "", "", "", "", "", 
           "X", "", "X", ""}, {5., 
           DateObject[{2020, 3, 11, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Medell\[IAcute]n", "", "", "X", "", "", "", "", "", "", "", "", 
           "X", "", "X", ""}, {6., 
           DateObject[{2020, 3, 11, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Medell\[IAcute]n", "", "", "X", "", "", "", "", "", "", "", "X", 
           "", "", "X", ""}, {7., 
           DateObject[{2020, 3, 11, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Cartagena", "", "", "", "", "", "", "", "", "X", "", "X", "", "X",
            "", ""}, {8., 
           DateObject[{2020, 3, 11, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Bogot\[AAcute] ", "", "", "X", "", "", "", "", "", "", "", "X", 
           "", "X", "", ""}, {9., 
           DateObject[{2020, 3, 11, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Bogot\[AAcute]", "", "", "X", "", "", "", "", "", "", "", "X", "",
            "X", "", ""}, {10., 
           DateObject[{2020, 3, 12, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Bogot\[AAcute]", "", "", "", "X", "", "", "", "", "", "", "X", "",
            "X", "", ""}, {11., 
           DateObject[{2020, 3, 12, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Bogot\[AAcute]", "", "", "", "X", "", "", "", "", "", "", "X", "",
            "X", "", ""}, {12., 
           DateObject[{2020, 3, 12, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Neiva", "", "", "", "", "", "", "X", "", "", "", "X", "", "", "X",
            ""}, {13., 
           DateObject[{2020, 3, 12, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Neiva", "", "", "", "", "", "", "", "X", "", "", "X", "", "X", "",
            ""}, {14., 
           DateObject[{2020, 3, 13, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Bogot\[AAcute]", "", "", "", "", "", "", "X", "", "", "", "X", "",
            "X", "", ""}, {15., 
           DateObject[{2020, 3, 13, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Meta", "", "", "", "X", "", "", "", "", "", "", "X", "", "X", "", 
           ""}, {16., 
           DateObject[{2020, 3, 13, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Palmira", "", "", "", "", "X", "", "", "", "", "", "", "X", "X", 
           "", ""}, {17., 
           DateObject[{2020, 3, 14, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Medell\[IAcute]n", "", "", "X", "", "", "", "", "", "", "", "X", 
           "", "", "X", ""}, {18., 
           DateObject[{2020, 3, 14, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Medell\[IAcute]n", "", "", "X", "", "", "", "", "", "", "", "", 
           "X", "", "X", ""}, {19., 
           DateObject[{2020, 3, 14, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Rionegro", "", "", "", "X", "", "", "", "", "", "", "", "X", "X", 
           "", ""}, {20., 
           DateObject[{2020, 3, 14, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Bogot\[AAcute]", "", "", "", "", "", "", "", "X", "", "", "X", "",
            "X", "", ""}, {21., 
           DateObject[{2020, 3, 14, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Bogot\[AAcute]", "", "", "", "", "", "X", "", "", "", "", "", "X",
            "X", "", ""}, {22., 
           DateObject[{2020, 3, 14, 0, 0, 0.}, "Instant", "Gregorian", -5.], 
           "Bogot\[AAcute]", "", "", "", "", "", "X", "", "", "", "", "X", "",
            "", "X", ""}}}], 
       Association[
       "ID de caso" -> Span[-20, -1], "Fecha de diagn\[OAcute]stico " -> 
        Span[-20, -1], "Ciudad de ubicaci\[OAcute]n" -> Span[-20, -1], 
        "0 a 9" -> Span[-20, -1], "10 a 19" -> Span[-20, -1], "20 a 29" -> 
        Span[-20, -1], "30 a 39" -> Span[-20, -1], "40 a 49" -> Span[-20, -1],
         "50 a 59" -> Span[-20, -1], "60 a 69" -> Span[-20, -1], "70 a 79" -> 
        Span[-20, -1], "80 a 89" -> Span[-20, -1], "90 o m\[AAcute]s" -> 
        Span[-20, -1], "Femenino" -> Span[-20, -1], "Masculino" -> 
        Span[-20, -1], "Importado" -> Span[-20, -1], "Asociado" -> 
        Span[-20, -1], "En estudio" -> Span[-20, -1]]], "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`AtomShape[10], 
     "InitialType" -> TypeSystem`AnyType, "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`AtomShape[10], "Type" -> TypeSystem`AnyType, 
     "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, 
     "DataRowCount" -> 2, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{"AssociationThread", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"ID de caso\"", ",", 
                    "\"Fecha de diagn\[OAcute]stico \"", ",", 
                    "\"Ciudad de ubicaci\[OAcute]n\"", ",", "\"0 a 9\"", ",", 
                    "\"10 a 19\"", ",", "\"20 a 29\"", ",", "\"30 a 39\"", 
                    ",", "\"40 a 49\"", ",", "\"50 a 59\"", ",", 
                    "\"60 a 69\"", ",", "\"70 a 79\"", ",", "\"80 a 89\"", 
                    ",", "\"90 o m\[AAcute]s\"", ",", "\"Femenino\"", ",", 
                    "\"Masculino\"", ",", "\"Importado\"", ",", 
                    "\"Asociado\"", ",", "\"En estudio\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\"ID de caso\"", ",", 
                    "\"Fecha de diagn\[OAcute]stico \"", ",", 
                    "\"Ciudad de ubicaci\[OAcute]n\"", ",", "\"0 a 9\"", ",", 
                    "\"10 a 19\"", ",", "\"20 a 29\"", ",", "\"30 a 39\"", 
                    ",", "\"40 a 49\"", ",", "\"50 a 59\"", ",", 
                    "\"60 a 69\"", ",", "\"70 a 79\"", ",", "\"80 a 89\"", 
                    ",", "\"90 o m\[AAcute]s\"", ",", "\"Femenino\"", ",", 
                    "\"Masculino\"", ",", "\"Importado\"", ",", 
                    "\"Asociado\"", ",", "\"En estudio\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Fri 6 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "6", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Bogot\[AAcute]\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"X\"", ",", 
                    "\"\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Mon 9 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "9", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Buga\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Mon 9 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "9", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Medell\[IAcute]n\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"X\"", ",", 
                    "\"\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Wed 11 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "11", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Medell\[IAcute]n\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Wed 11 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "11", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Medell\[IAcute]n\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"6.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Wed 11 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "11", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Medell\[IAcute]n\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"7.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Wed 11 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "11", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Cartagena\"", ",", "\"\"", ",", "\"\"", 
                    ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"8.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Wed 11 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "11", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Bogot\[AAcute] \"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"X\"", ",", 
                    "\"\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"9.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Wed 11 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "11", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Bogot\[AAcute]\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"X\"", ",", 
                    "\"\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Thu 12 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "12", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Bogot\[AAcute]\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"X\"", ",", 
                    "\"\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"11.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Thu 12 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "12", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Bogot\[AAcute]\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"X\"", ",", 
                    "\"\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"12.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Thu 12 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "12", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Neiva\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\"", ",", "\"\"", ",", "\"X\"", ",", 
                    "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"13.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Thu 12 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "12", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Neiva\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"14.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Fri 13 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "13", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Bogot\[AAcute]\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"X\"", ",", 
                    "\"\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"15.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Fri 13 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "13", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Meta\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"16.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Fri 13 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "13", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Palmira\"", ",", "\"\"", ",", "\"\"", ",",
                     "\"\"", ",", "\"\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"17.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Sat 14 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "14", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Medell\[IAcute]n\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"18.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Sat 14 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "14", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Medell\[IAcute]n\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"19.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Sat 14 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "14", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Rionegro\"", ",", "\"\"", ",", "\"\"", 
                    ",", "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"20.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Sat 14 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "14", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Bogot\[AAcute]\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"X\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"X\"", ",", 
                    "\"\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Sat 14 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "14", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Bogot\[AAcute]\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"X\"", ",", "\"X\"", ",", 
                    "\"\"", ",", "\"\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22.`", ",", 
                    TemplateBox[{
                    RowBox[{"\"Sat 14 Mar 2020 00:00:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "3", ",", "14", ",", "0", ",", "0", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], ",", "\"Bogot\[AAcute]\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"\"", ",", "\"X\"", ",", "\"\"", ",", "\"\"", ",", 
                    "\"X\"", ",", "\"\""}], "}"}]}], "}"}], "}"}]}], "]"}], 
                   "\[LeftDoubleBracket]", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"ID de caso\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"Fecha de diagn\[OAcute]stico \"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"Ciudad de ubicaci\[OAcute]n\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"0 a 9\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"10 a 19\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"20 a 29\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"30 a 39\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"40 a 49\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"50 a 59\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"60 a 69\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"70 a 79\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"80 a 89\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"90 o m\[AAcute]s\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"Femenino\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"Masculino\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"Importado\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"Asociado\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}], ",", 
                    RowBox[{"\"En estudio\"", "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "20"}], ";;", 
                    RowBox[{"-", "1"}]}]}]}], "\[RightAssociation]"}], 
                   "\[RightDoubleBracket]"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{}, "Item",
                 False], "Mouse"], ImageSize -> {{10, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1047., {22.7203125, 28.2796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1047., {22.7203125, 28.2796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.838927093724166*^9, 3.838927127373925*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"fb2a8061-57e1-4ca5-923a-1c84c7f0c9d4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "url", "=", 
   "\"\<https://www.datos.gov.co/Salud-y-Protecci-n-Social/Casos-positivos-de-\
COVID-19-en-Colombia/gt2j-8ykr/data\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8389291972026567`*^9, 3.838929210729249*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"90de3e52-9e00-4bf0-8709-5322a47dc989"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"url", ",", "\"\<Elements\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.838929212239873*^9, 3.838929238828315*^9}, 
   3.838929596530759*^9, {3.838929904884534*^9, 3.838929907544005*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"a2b7a1c1-c9ad-46ef-a3e9-39ecab495ae5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Data\"\>", ",", "\<\"FullData\"\>", ",", "\<\"Hyperlinks\"\>", 
   ",", "\<\"ImageLinks\"\>", ",", "\<\"Images\"\>", ",", "\<\"Plaintext\"\>",
    ",", "\<\"Source\"\>", ",", "\<\"Title\"\>", ",", "\<\"XMLObject\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.838929259118469*^9, {3.838929597152193*^9, 3.8389296059049807`*^9}, 
   3.8389299093677073`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"8035d4d6-4219-4089-932b-4e32888ac941"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"url", ",", "\"\<Source\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8389299136162853`*^9, 3.838929956728259*^9}, {
  3.838931444991527*^9, 3.838931451296994*^9}, {3.8389316633791018`*^9, 
  3.838931664598521*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"2927b963-9561-49ff-8661-58ef8344d468"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{"url", ",", " ", "\"\<Data\>\""}], "]"}]}]], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"b752b908-b433-4da7-9f84-982bbd4e387b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Cargando datos compartidos\[Ellipsis] \"\>", ",", "\<\" \"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Documentaci\[OAcute]n de la API\"\>", 
       ",", "\<\"Portal del desarrollador\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"fecha reporte web\"\>", ",", "\<\"fecha_reporte_web\"\>", 
       ",", "\<\"ID de caso\"\>", ",", "\<\"id_de_caso\"\>", 
       ",", "\<\"Fecha de notificaci\[OAcute]n\"\>", 
       ",", "\<\"fecha_de_notificaci_n\"\>", 
       ",", "\<\"C\[OAcute]digo DIVIPOLA departamento\"\>", 
       ",", "\<\"departamento\"\>", ",", "\<\"Nombre departamento\"\>", 
       ",", "\<\"departamento_nom\"\>", 
       ",", "\<\"C\[OAcute]digo DIVIPOLA municipio\"\>", 
       ",", "\<\"ciudad_municipio\"\>", ",", "\<\"Nombre municipio\"\>", 
       ",", "\<\"ciudad_municipio_nom\"\>", ",", "\<\"Edad\"\>", 
       ",", "\<\"edad\"\>", ",", "\<\"Unidad de medida de edad\"\>", 
       ",", "\<\"unidad_medida\"\>", ",", "\<\"Sexo\"\>", ",", "\<\"sexo\"\>",
        ",", "\<\"Tipo de contagio\"\>", ",", "\<\"fuente_tipo_contagio\"\>", 
       ",", "\<\"Ubicaci\[OAcute]n del caso\"\>", ",", "\<\"ubicacion\"\>", 
       ",", "\<\"Estado\"\>", ",", "\<\"estado\"\>", 
       ",", "\<\"C\[OAcute]digo ISO del pa\[IAcute]s\"\>", 
       ",", "\<\"pais_viajo_1_cod\"\>", 
       ",", "\<\"Nombre del pa\[IAcute]s\"\>", 
       ",", "\<\"pais_viajo_1_nom\"\>", ",", "\<\"Recuperado\"\>", 
       ",", "\<\"recuperado\"\>", 
       ",", "\<\"Fecha de inicio de s\[IAcute]ntomas\"\>", 
       ",", "\<\"fecha_inicio_sintomas\"\>", ",", "\<\"Fecha de muerte\"\>", 
       ",", "\<\"fecha_muerte\"\>", 
       ",", "\<\"Fecha de diagn\[OAcute]stico\"\>", 
       ",", "\<\"fecha_diagnostico\"\>", 
       ",", "\<\"Fecha de recuperaci\[OAcute]n\"\>", 
       ",", "\<\"fecha_recuperado\"\>", 
       ",", "\<\"Tipo de recuperaci\[OAcute]n\"\>", 
       ",", "\<\"tipo_recuperacion\"\>", 
       ",", "\<\"Pertenencia \[EAcute]tnica\"\>", ",", "\<\"per_etn_\"\>", 
       ",", "\<\"Nombre del grupo \[EAcute]tnico\"\>", 
       ",", "\<\"nom_grupo_\"\>"}], "}"}]}], "}"}], 
   ",", "\<\"Nueva Lente de Datos\"\>", ",", "\<\"Close\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Yes\"\>", ",", "\<\"No\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Cancelar\"\>", ",", "\<\"Enviar\"\>"}], "}"}], 
     ",", "\<\"Hecho\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\" Cerrar \"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\" Cancelar \"\>", 
         ",", "\<\" Correo electr\[OAcute]nico \"\>"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\" Cancelar \"\>", ",", "\<\" No guardar \"\>", 
       ",", "\<\" Guardar \"\>", ",", "\<\" Actualizar \"\>"}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8389314263006973`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"c5624769-e3d1-4f64-b9c1-3bf36e9a9446"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "url", " ", "=", " ", 
   "\"\<http://www.wrh.noaa.gov/forecast/wxtables/index.php?lat=38.02&\\lon=\
122.13\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8389294106429253`*^9, 3.838929410644079*^9}, 
   3.83892950619976*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[76]:=",ExpressionUUID->"718b8668-ba0d-4efb-b5bb-6fa319d17777"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{"url", ",", " ", "\"\<Data\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8389294256475563`*^9, 3.8389294256486673`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"71e36b48-742e-4087-8b74-6acd7c87f1a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\" Home \"\>", ",", "\<\"Regional Director\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Operations and Decision Support\"\>", 
       ",", "\<\"Science and Technology Infusion\"\>", 
       ",", "\<\"Program Support\"\>", ",", "\<\"Systems and Facilities\"\>", 
       ",", "\<\"Administrative Management\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Employment Info\"\>", ",", "\<\"WR Science Papers\"\>", 
       ",", "\<\"NWS News\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Contact Info\"\>", ",", "\<\"Feedback\"\>", 
       ",", "\<\"FAQ\"\>"}], "}"}], 
     ",", "\<\" Facebook Twitter YouTube XML/RSS \"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Forecast Weather Table Interface\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          
          RowBox[{"\<\"Custom Weather Table\"\>", ",", "\<\"XML\"\>", 
           ",", "\<\"Point Forecast Page\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"Point Forecast Matrix \"\>", 
           ",", "\<\"Hourly Tabular Forecast \"\>", 
           ",", "\<\"Hourly Weather Graph \"\>"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Interval in Hours: 1 3 6\"\>", 
         ",", "\<\"Duration in Days: 1 2 3 4 5 6 7\"\>", 
         ",", "\<\"Search By Address: Enter Search term in the small box with \
the magnifying glass inside of the map.\"\>"}], "}"}]}], "}"}], 
     ",", "\<\" \"\>", ",", "\<\" Disclaimer Comments on New ESRI Map\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.83892942835973*^9, 3.838929508532385*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"d17e4320-98d7-41dc-bf9c-52bbff0f9c98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"session", "=", 
  RowBox[{"StartWebSession", "[", "]"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->52285793,ExpressionUUID->"19a25e8b-bf66-463a-bb82-0b71fcedf610"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["WebSessionObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.854187499999998`, {0., 10.854187499999998`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 4.}, {4.,
                 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {13., 
                22.}}}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 4.}, {4.,
                 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {13., 22.}}}, 
                CurveClosed -> {1}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Thickness[0.041639999999999996`], 
               Opacity[1.], 
               CapForm["Round"], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 10.2964}, {
                6.5485, 8.846400000000001}, {9.5855, 7.9164}, {12.9955, 
                7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {21.5385, 
                10.3964}}}, CurveClosed -> {0}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Thickness[0.041639999999999996`], 
               Opacity[1.], 
               CapForm["Round"], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 17.6963}, {
                7.4428, 16.5953}, {10.0828, 15.916300000000001`}, {
                12.994800000000001`, 15.916300000000001`}, {15.9288, 
                15.916300000000001`}, {18.5888, 16.6053}, {20.5248, 
                17.7213}}}, CurveClosed -> {0}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Thickness[0.041639999999999996`], 
               Opacity[1.], 
               CapForm["Round"], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 13.5786}, {
                6.450200000000001, 12.5036}, {9.5562, 11.8666}, {
                12.984200000000001`, 11.9156}, {16.4042, 
                11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                13.8266}}}, CurveClosed -> {0}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Opacity[1.], 
               CapForm["Round"], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                10.955100000000002`, 21.586399999999998`}, {9.148100000000001,
                 19.720399999999998`}, {7.962100000000001, 
                16.571399999999997`}, {7.962100000000001, 
                13.000399999999997`}, {7.962100000000001, 9.3384}, {
                9.210100000000002, 6.1203999999999965`}, {11.095100000000002`,
                 4.274399999999996}}}, CurveClosed -> {0}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Opacity[1.], 
               CapForm["Round"], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 4.2739}, {
                16.7898, 6.1199}, {18.0378, 9.338899999999999}, {18.0378, 
                13.000899999999998`}, {18.0378, 16.5719}, {16.8508, 
                19.721899999999998`}, {15.0438, 21.587900000000005`}}}, 
                CurveClosed -> {0}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Opacity[1.], 
               CapForm["Round"], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 21.765599999999996`}, {
                13., 4.011599999999994}}}, CurveClosed -> {0}]}}, AspectRatio -> 
             Automatic, ImageSize -> {25., 25.}, 
             PlotRange -> {{0., 25.}, {0., 25.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Chrome\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Session ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"b33e6c83c5c085ce9c0d99115be88686\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 4.}, {4.,
                 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {13., 
                22.}}}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 4.}, {4.,
                 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {13., 22.}}}, 
                CurveClosed -> {1}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Thickness[0.041639999999999996`], 
               Opacity[1.], 
               CapForm["Round"], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 10.2964}, {
                6.5485, 8.846400000000001}, {9.5855, 7.9164}, {12.9955, 
                7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {21.5385, 
                10.3964}}}, CurveClosed -> {0}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Thickness[0.041639999999999996`], 
               Opacity[1.], 
               CapForm["Round"], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 17.6963}, {
                7.4428, 16.5953}, {10.0828, 15.916300000000001`}, {
                12.994800000000001`, 15.916300000000001`}, {15.9288, 
                15.916300000000001`}, {18.5888, 16.6053}, {20.5248, 
                17.7213}}}, CurveClosed -> {0}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Thickness[0.041639999999999996`], 
               Opacity[1.], 
               CapForm["Round"], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 13.5786}, {
                6.450200000000001, 12.5036}, {9.5562, 11.8666}, {
                12.984200000000001`, 11.9156}, {16.4042, 
                11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                13.8266}}}, CurveClosed -> {0}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Opacity[1.], 
               CapForm["Round"], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                10.955100000000002`, 21.586399999999998`}, {9.148100000000001,
                 19.720399999999998`}, {7.962100000000001, 
                16.571399999999997`}, {7.962100000000001, 
                13.000399999999997`}, {7.962100000000001, 9.3384}, {
                9.210100000000002, 6.1203999999999965`}, {11.095100000000002`,
                 4.274399999999996}}}, CurveClosed -> {0}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Opacity[1.], 
               CapForm["Round"], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 4.2739}, {
                16.7898, 6.1199}, {18.0378, 9.338899999999999}, {18.0378, 
                13.000899999999998`}, {18.0378, 16.5719}, {16.8508, 
                19.721899999999998`}, {15.0438, 21.587900000000005`}}}, 
                CurveClosed -> {0}]}, {
               RGBColor[0.392, 0.392, 0.392], 
               Opacity[1.], 
               CapForm["Round"], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 21.765599999999996`}, {
                13., 4.011599999999994}}}, CurveClosed -> {0}]}}, AspectRatio -> 
             Automatic, ImageSize -> {25., 25.}, 
             PlotRange -> {{0., 25.}, {0., 25.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Chrome\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Session ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"b33e6c83c5c085ce9c0d99115be88686\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Driver URL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"http://localhost:44115\"", "SummaryItem"]}], ""}, {
              
               RowBox[{
                 TagBox["\"Driver Process: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["7217", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"lina\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"10.985472`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["7", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sun 10 Oct 2021 06:38:49\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2021", ",", "10", ",", "10", ",", "6", ",", "38",
                     ",", "49.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.1000000000000000056`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"15", "13", "0", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Hours\"", ",", "\"Minutes\"", ",", 
                    "\"Seconds\""}], "}"}]}, "QuantityMixedUnit3"], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, 
                    "PPID" -> 7217, "Program" -> "chromedriver", "Path" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "User" -> "lina", "StartTime" -> 
                    DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
                    "Gregorian", -5.]]], Editable -> False, 
                   SelectWithContents -> True, Selectable -> False], 
                  "SummaryItem"]}], ""}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  WebSessionObject[
   Association[
   "SessionID" -> "b33e6c83c5c085ce9c0d99115be88686", "Browser" -> "Chrome", 
    "URL" -> "http://localhost:44115", "Exec" -> 
    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/Components/WebUnit/\
Resources/DriverBinaries/ChromeDriver/Linux-x86-64/chromedriver", "Process" -> 
    ProcessObject[
      Association[
      "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, "PPID" -> 7217, 
       "Program" -> "chromedriver", "Path" -> 
       "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/Components/WebUnit/\
Resources/DriverBinaries/ChromeDriver/Linux-x86-64/chromedriver", "User" -> 
       "lina", "StartTime" -> 
       DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", "Gregorian", -5.]]], 
    "Active" -> True, "SessionTime" -> 
    3.838917109643676`16.33678372404032*^9]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellContext->"Cell$$6389`",
 CellLabel->"Out[1]=",
 CellID->166699033,ExpressionUUID->"c25f2bfa-3644-4411-b6cb-ee27f3b16a09"]
}, Open  ]],

Cell["Open a webpage in the current session:", "ExampleText",
 CellID->61591555,ExpressionUUID->"1ad2c590-722d-433f-83eb-d5cbc02a91cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WebExecute", "[", 
  RowBox[{"session", ",", 
   RowBox[{
   "\"\<OpenPage\>\"", "\[Rule]", 
    "\"\<https://www.datos.gov.co/Salud-y-Protecci-n-Social/Casos-positivos-\
de-COVID-19-en-Colombia/gt2j-8ykr/data\>\""}]}], "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->12174459,ExpressionUUID->"e8579508-8b99-4939-b3b2-b4026fc78d39"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Page \
https://www.datos.gov.co/Salud-y-Protecci-n-Social/Casos-positivos-de-COVID-\
19-en-Colombia/gt2j-8ykr/data opened successfully.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"OpenPage\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Page \
https://www.datos.gov.co/Salud-y-Protecci-n-Social/Casos-positivos-de-COVID-\
19-en-Colombia/gt2j-8ykr/data opened successfully.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"OpenPage\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success["OpenPage", 
   Association[
   "MessageTemplate" :> "Page `page` opened successfully.", 
    "MessageParameters" -> 
    Association[
     "page" -> 
      "https://www.datos.gov.co/Salud-y-Protecci-n-Social/Casos-positivos-de-\
COVID-19-en-Colombia/gt2j-8ykr/data"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellContext->"Cell$$6389`",
 CellLabel->"Out[2]=",
 CellID->1438839333,ExpressionUUID->"e8e17cd4-aae3-4fe9-a4fb-69817a677f17"]
}, Open  ]],

Cell[TextData[{
 "Locate header elements on the page using ",
 Cell[BoxData["\"\<LocateElements\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ce3f8416-1fde-4d0e-860e-c3e79fd3a480"],
 ":"
}], "ExampleText",
 CellID->448718563,ExpressionUUID->"c6a5242e-b680-4b9a-8b7b-9af8ecb8dca0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WebExecute", "[", 
  RowBox[{"session", ",", 
   RowBox[{"\"\<LocateElements\>\"", "->", 
    RowBox[{"\"\<HyperlinkText\>\"", "\[Rule]", "\"\<Exportar\>\""}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->810674945,ExpressionUUID->"887fce9f-aff2-4df6-bcbd-215342769129"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["WebElementObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                ImageSizeCache -> {
                 10.854187499999998`, {0., 10.854187499999998`}}], Appearance -> 
               None, BaseStyle -> {}, 
               ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.04], {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                 13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 4.}, {
                 4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {13., 
                 22.}}}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                 13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 4.}, {
                 4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {13., 
                 22.}}}, CurveClosed -> {1}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Thickness[0.041639999999999996`], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 
                 10.2964}, {6.5485, 8.846400000000001}, {9.5855, 7.9164}, {
                 12.9955, 7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {
                 21.5385, 10.3964}}}, CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Thickness[0.041639999999999996`], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 
                 17.6963}, {7.4428, 16.5953}, {10.0828, 
                 15.916300000000001`}, {12.994800000000001`, 
                 15.916300000000001`}, {15.9288, 15.916300000000001`}, {
                 18.5888, 16.6053}, {20.5248, 17.7213}}}, 
                 CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Thickness[0.041639999999999996`], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 
                 13.5786}, {6.450200000000001, 12.5036}, {9.5562, 11.8666}, {
                 12.984200000000001`, 11.9156}, {16.4042, 
                 11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                 13.8266}}}, CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                 10.955100000000002`, 21.586399999999998`}, {
                 9.148100000000001, 19.720399999999998`}, {7.962100000000001, 
                 16.571399999999997`}, {7.962100000000001, 
                 13.000399999999997`}, {7.962100000000001, 9.3384}, {
                 9.210100000000002, 6.1203999999999965`}, {
                 11.095100000000002`, 4.274399999999996}}}, 
                 CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 
                 4.2739}, {16.7898, 6.1199}, {18.0378, 9.338899999999999}, {
                 18.0378, 13.000899999999998`}, {18.0378, 16.5719}, {16.8508, 
                 19.721899999999998`}, {15.0438, 21.587900000000005`}}}, 
                 CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 21.765599999999996`}, {
                 13., 4.011599999999994}}}, CurveClosed -> {0}]}}, 
              AspectRatio -> Automatic, ImageSize -> {25., 25.}, 
              PlotRange -> {{0., 25.}, {0., 25.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Chrome\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               
                RowBox[{
                  TagBox["\"ElementId: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"0.3518851626298065-2\"", "SummaryItem"]}], ""}}, 
              AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
         GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               Appearance -> None, BaseStyle -> {}, 
               ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.04], {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                 13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 4.}, {
                 4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {13., 
                 22.}}}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                 13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 4.}, {
                 4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {13., 
                 22.}}}, CurveClosed -> {1}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Thickness[0.041639999999999996`], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 
                 10.2964}, {6.5485, 8.846400000000001}, {9.5855, 7.9164}, {
                 12.9955, 7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {
                 21.5385, 10.3964}}}, CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Thickness[0.041639999999999996`], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 
                 17.6963}, {7.4428, 16.5953}, {10.0828, 
                 15.916300000000001`}, {12.994800000000001`, 
                 15.916300000000001`}, {15.9288, 15.916300000000001`}, {
                 18.5888, 16.6053}, {20.5248, 17.7213}}}, 
                 CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Thickness[0.041639999999999996`], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 
                 13.5786}, {6.450200000000001, 12.5036}, {9.5562, 11.8666}, {
                 12.984200000000001`, 11.9156}, {16.4042, 
                 11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                 13.8266}}}, CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                 10.955100000000002`, 21.586399999999998`}, {
                 9.148100000000001, 19.720399999999998`}, {7.962100000000001, 
                 16.571399999999997`}, {7.962100000000001, 
                 13.000399999999997`}, {7.962100000000001, 9.3384}, {
                 9.210100000000002, 6.1203999999999965`}, {
                 11.095100000000002`, 4.274399999999996}}}, 
                 CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 
                 4.2739}, {16.7898, 6.1199}, {18.0378, 9.338899999999999}, {
                 18.0378, 13.000899999999998`}, {18.0378, 16.5719}, {16.8508, 
                 19.721899999999998`}, {15.0438, 21.587900000000005`}}}, 
                 CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 21.765599999999996`}, {
                 13., 4.011599999999994}}}, CurveClosed -> {0}]}}, 
              AspectRatio -> Automatic, ImageSize -> {25., 25.}, 
              PlotRange -> {{0., 25.}, {0., 25.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Chrome\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               
                RowBox[{
                  TagBox["\"ElementId: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"0.3518851626298065-2\"", "SummaryItem"]}], ""}, {
                RowBox[{
                  TagBox["\"Driver URL: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"http://localhost:44115\"", "SummaryItem"]}], ""}, {
                RowBox[{
                  TagBox["\"Driver Process: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["7217", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"lina\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"11.165696`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sun 10 Oct 2021 06:38:49\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2021", ",", "10", ",", "10", ",", "6", ",", "38",
                     ",", "49.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.1199999999999999956`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0200000000000000004`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"15", "22", "43.`5.", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Hours\"", ",", "\"Minutes\"", ",", 
                    "\"Seconds\""}], "}"}]}, "QuantityMixedUnit3"], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, 
                    "PPID" -> 7217, "Program" -> "chromedriver", "Path" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "User" -> "lina", "StartTime" -> 
                    DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
                    "Gregorian", -5.]]], Editable -> False, 
                    SelectWithContents -> True, Selectable -> False], 
                   "SummaryItem"]}], ""}}, AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   WebElementObject[
    Association[
    "SessionID" -> "b33e6c83c5c085ce9c0d99115be88686", "Browser" -> "Chrome", 
     "Process" -> ProcessObject[
       Association[
       "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, "PPID" -> 7217, 
        "Program" -> "chromedriver", "Path" -> 
        "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/Components/\
WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/chromedriver", 
        "User" -> "lina", "StartTime" -> 
        DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", "Gregorian", -5.]]],
      "URL" -> "http://localhost:44115", "Exec" -> 
     "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/Components/WebUnit/\
Resources/DriverBinaries/ChromeDriver/Linux-x86-64/chromedriver", "ElementId" -> 
     "0.3518851626298065-2"]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellContext->"Cell$$6389`",
 CellLabel->"Out[10]=",
 CellID->1263085917,ExpressionUUID->"6d6bc3f9-a376-4524-bc0a-987e843c4323"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WebExecute", "[", 
  RowBox[{"\"\<ClickElement\>\"", "\[Rule]", "%10"}], "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->951552640,ExpressionUUID->"b89e20a2-6acf-4343-887a-c0e33254c37d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.854187499999998`, {0., 10.854187499999998`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[Checkmark]\"", StripOnInput -> False, LineColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FrontFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              BackFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              GraphicsColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FontSize -> 25, FontColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451]], 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"ClickElement was successful.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Element\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["WebElementObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {8.3083125, {0., 8.3083125}}], 
                    Appearance -> None, BaseStyle -> {}, 
                    ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}, CurveClosed -> {1}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 
                    10.2964}, {6.5485, 8.846400000000001}, {9.5855, 7.9164}, {
                    12.9955, 7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {
                    21.5385, 10.3964}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 
                    17.6963}, {7.4428, 16.5953}, {10.0828, 
                    15.916300000000001`}, {12.994800000000001`, 
                    15.916300000000001`}, {15.9288, 15.916300000000001`}, {
                    18.5888, 16.6053}, {20.5248, 17.7213}}}, 
                    CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 
                    13.5786}, {6.450200000000001, 12.5036}, {9.5562, 
                    11.8666}, {12.984200000000001`, 11.9156}, {16.4042, 
                    11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                    13.8266}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                    10.955100000000002`, 21.586399999999998`}, {
                    9.148100000000001, 19.720399999999998`}, {
                    7.962100000000001, 16.571399999999997`}, {
                    7.962100000000001, 13.000399999999997`}, {
                    7.962100000000001, 9.3384}, {9.210100000000002, 
                    6.1203999999999965`}, {11.095100000000002`, 
                    4.274399999999996}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 
                    4.2739}, {16.7898, 6.1199}, {18.0378, 
                    9.338899999999999}, {18.0378, 13.000899999999998`}, {
                    18.0378, 16.5719}, {16.8508, 19.721899999999998`}, {
                    15.0438, 21.587900000000005`}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 
                    21.765599999999996`}, {13., 4.011599999999994}}}, 
                    CurveClosed -> {0}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Chrome\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"ElementId: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0.3518851626298065-2\"", "SummaryItem"]}], ""}},
                     AutoDelete -> False, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                    BaseStyle -> {}, 
                    ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}, CurveClosed -> {1}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 
                    10.2964}, {6.5485, 8.846400000000001}, {9.5855, 7.9164}, {
                    12.9955, 7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {
                    21.5385, 10.3964}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 
                    17.6963}, {7.4428, 16.5953}, {10.0828, 
                    15.916300000000001`}, {12.994800000000001`, 
                    15.916300000000001`}, {15.9288, 15.916300000000001`}, {
                    18.5888, 16.6053}, {20.5248, 17.7213}}}, 
                    CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 
                    13.5786}, {6.450200000000001, 12.5036}, {9.5562, 
                    11.8666}, {12.984200000000001`, 11.9156}, {16.4042, 
                    11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                    13.8266}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                    10.955100000000002`, 21.586399999999998`}, {
                    9.148100000000001, 19.720399999999998`}, {
                    7.962100000000001, 16.571399999999997`}, {
                    7.962100000000001, 13.000399999999997`}, {
                    7.962100000000001, 9.3384}, {9.210100000000002, 
                    6.1203999999999965`}, {11.095100000000002`, 
                    4.274399999999996}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 
                    4.2739}, {16.7898, 6.1199}, {18.0378, 
                    9.338899999999999}, {18.0378, 13.000899999999998`}, {
                    18.0378, 16.5719}, {16.8508, 19.721899999999998`}, {
                    15.0438, 21.587900000000005`}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 
                    21.765599999999996`}, {13., 4.011599999999994}}}, 
                    CurveClosed -> {0}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Chrome\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"ElementId: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0.3518851626298065-2\"", "SummaryItem"]}], ""}, {
                    RowBox[{
                    TagBox["\"Driver URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"http://localhost:44115\"", "SummaryItem"]}], 
                    ""}, {
                    RowBox[{
                    TagBox["\"Driver Process: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["7217", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"lina\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"11.116544`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sun 10 Oct 2021 06:38:49\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2021", ",", "10", ",", "10", ",", "6", ",", "38",
                     ",", "49.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.1300000000000000044`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0400000000000000008`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"15", "24", "26.`5.", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Hours\"", ",", "\"Minutes\"", ",", 
                    "\"Seconds\""}], "}"}]}, "QuantityMixedUnit3"], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ProcessObject[
                    Association["ManagedProcess" -> True, "UID" -> 6, "PID" -> 
                    23650, "PPID" -> 7217, "Program" -> "chromedriver", 
                    "Path" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "User" -> "lina", "StartTime" -> 
                    DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
                    "Gregorian", -5.]]], Editable -> False, 
                    SelectWithContents -> True, Selectable -> False], 
                    "SummaryItem"]}], ""}}, AutoDelete -> False, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    WebElementObject[
                    Association[
                    "SessionID" -> "b33e6c83c5c085ce9c0d99115be88686", 
                    "Browser" -> "Chrome", "Process" -> ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, 
                    "PPID" -> 7217, "Program" -> "chromedriver", "Path" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "User" -> "lina", "StartTime" -> 
                    DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
                    "Gregorian", -5.]]], "URL" -> "http://localhost:44115", 
                    "Exec" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "ElementId" -> "0.3518851626298065-2"]], Editable -> False, 
                    SelectWithContents -> True, Selectable -> False], "}"}], 
                  "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[Checkmark]\"", StripOnInput -> False, LineColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FrontFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              BackFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              GraphicsColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FontSize -> 25, FontColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451]], 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"ClickElement was successful.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Element\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["WebElementObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}, CurveClosed -> {1}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 
                    10.2964}, {6.5485, 8.846400000000001}, {9.5855, 7.9164}, {
                    12.9955, 7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {
                    21.5385, 10.3964}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 
                    17.6963}, {7.4428, 16.5953}, {10.0828, 
                    15.916300000000001`}, {12.994800000000001`, 
                    15.916300000000001`}, {15.9288, 15.916300000000001`}, {
                    18.5888, 16.6053}, {20.5248, 17.7213}}}, 
                    CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 
                    13.5786}, {6.450200000000001, 12.5036}, {9.5562, 
                    11.8666}, {12.984200000000001`, 11.9156}, {16.4042, 
                    11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                    13.8266}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                    10.955100000000002`, 21.586399999999998`}, {
                    9.148100000000001, 19.720399999999998`}, {
                    7.962100000000001, 16.571399999999997`}, {
                    7.962100000000001, 13.000399999999997`}, {
                    7.962100000000001, 9.3384}, {9.210100000000002, 
                    6.1203999999999965`}, {11.095100000000002`, 
                    4.274399999999996}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 
                    4.2739}, {16.7898, 6.1199}, {18.0378, 
                    9.338899999999999}, {18.0378, 13.000899999999998`}, {
                    18.0378, 16.5719}, {16.8508, 19.721899999999998`}, {
                    15.0438, 21.587900000000005`}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 
                    21.765599999999996`}, {13., 4.011599999999994}}}, 
                    CurveClosed -> {0}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Chrome\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"ElementId: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0.3518851626298065-2\"", "SummaryItem"]}], ""}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}, CurveClosed -> {1}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 
                    10.2964}, {6.5485, 8.846400000000001}, {9.5855, 7.9164}, {
                    12.9955, 7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {
                    21.5385, 10.3964}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 
                    17.6963}, {7.4428, 16.5953}, {10.0828, 
                    15.916300000000001`}, {12.994800000000001`, 
                    15.916300000000001`}, {15.9288, 15.916300000000001`}, {
                    18.5888, 16.6053}, {20.5248, 17.7213}}}, 
                    CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 
                    13.5786}, {6.450200000000001, 12.5036}, {9.5562, 
                    11.8666}, {12.984200000000001`, 11.9156}, {16.4042, 
                    11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                    13.8266}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                    10.955100000000002`, 21.586399999999998`}, {
                    9.148100000000001, 19.720399999999998`}, {
                    7.962100000000001, 16.571399999999997`}, {
                    7.962100000000001, 13.000399999999997`}, {
                    7.962100000000001, 9.3384}, {9.210100000000002, 
                    6.1203999999999965`}, {11.095100000000002`, 
                    4.274399999999996}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 
                    4.2739}, {16.7898, 6.1199}, {18.0378, 
                    9.338899999999999}, {18.0378, 13.000899999999998`}, {
                    18.0378, 16.5719}, {16.8508, 19.721899999999998`}, {
                    15.0438, 21.587900000000005`}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 
                    21.765599999999996`}, {13., 4.011599999999994}}}, 
                    CurveClosed -> {0}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Chrome\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"ElementId: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0.3518851626298065-2\"", "SummaryItem"]}], ""}, {
                    RowBox[{
                    TagBox["\"Driver URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"http://localhost:44115\"", "SummaryItem"]}], 
                    ""}, {
                    RowBox[{
                    TagBox["\"Driver Process: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["7217", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"lina\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"11.116544`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sun 10 Oct 2021 06:38:49\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2021", ",", "10", ",", "10", ",", "6", ",", "38",
                     ",", "49.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.1300000000000000044`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0400000000000000008`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"15", "24", "26.`5.", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Hours\"", ",", "\"Minutes\"", ",", 
                    "\"Seconds\""}], "}"}]}, "QuantityMixedUnit3"], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, 
                    "PPID" -> 7217, "Program" -> "chromedriver", "Path" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "User" -> "lina", "StartTime" -> 
                    DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
                    "Gregorian", -5.]]], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "SummaryItem"]}], 
                    ""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    WebElementObject[
                    Association[
                    "SessionID" -> "b33e6c83c5c085ce9c0d99115be88686", 
                    "Browser" -> "Chrome", "Process" -> ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, 
                    "PPID" -> 7217, "Program" -> "chromedriver", "Path" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "User" -> "lina", "StartTime" -> 
                    DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
                    "Gregorian", -5.]]], "URL" -> "http://localhost:44115", 
                    "Exec" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "ElementId" -> "0.3518851626298065-2"]], Editable -> False, 
                    SelectWithContents -> True, Selectable -> False], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"ClickElement\"", "SummaryItem"]}]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success["ClickElement", 
   Association[
   "MessageTemplate" :> "`command` was successful.", "MessageParameters" -> 
    Association["command" -> "ClickElement"], "Element" -> {
      WebElementObject[
       Association[
       "SessionID" -> "b33e6c83c5c085ce9c0d99115be88686", "Browser" -> 
        "Chrome", "Process" -> ProcessObject[
          Association[
          "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, "PPID" -> 
           7217, "Program" -> "chromedriver", "Path" -> 
           "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/Components/\
WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/chromedriver", 
           "User" -> "lina", "StartTime" -> 
           DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
             "Gregorian", -5.]]], "URL" -> "http://localhost:44115", "Exec" -> 
        "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/Components/\
WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/chromedriver", 
        "ElementId" -> "0.3518851626298065-2"]]}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellContext->"Cell$$6389`",
 CellLabel->"Out[11]=",
 CellID->171376709,ExpressionUUID->"fe279910-2308-4985-ac98-b1200e7d2302"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WebExecute", "[", 
  RowBox[{"session", ",", 
   RowBox[{"\"\<LocateElements\>\"", "->", 
    RowBox[{"\"\<HyperlinkText\>\"", "\[Rule]", "\"\<CSV\>\""}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[12]:=",
 CellID->276280733,ExpressionUUID->"8b0bd1b3-1eb9-4ac5-8791-39e97d915558"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["WebElementObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                ImageSizeCache -> {
                 10.854187499999998`, {0., 10.854187499999998`}}], Appearance -> 
               None, BaseStyle -> {}, 
               ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.04], {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                 13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 4.}, {
                 4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {13., 
                 22.}}}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                 13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 4.}, {
                 4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {13., 
                 22.}}}, CurveClosed -> {1}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Thickness[0.041639999999999996`], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 
                 10.2964}, {6.5485, 8.846400000000001}, {9.5855, 7.9164}, {
                 12.9955, 7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {
                 21.5385, 10.3964}}}, CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Thickness[0.041639999999999996`], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 
                 17.6963}, {7.4428, 16.5953}, {10.0828, 
                 15.916300000000001`}, {12.994800000000001`, 
                 15.916300000000001`}, {15.9288, 15.916300000000001`}, {
                 18.5888, 16.6053}, {20.5248, 17.7213}}}, 
                 CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Thickness[0.041639999999999996`], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 
                 13.5786}, {6.450200000000001, 12.5036}, {9.5562, 11.8666}, {
                 12.984200000000001`, 11.9156}, {16.4042, 
                 11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                 13.8266}}}, CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                 10.955100000000002`, 21.586399999999998`}, {
                 9.148100000000001, 19.720399999999998`}, {7.962100000000001, 
                 16.571399999999997`}, {7.962100000000001, 
                 13.000399999999997`}, {7.962100000000001, 9.3384}, {
                 9.210100000000002, 6.1203999999999965`}, {
                 11.095100000000002`, 4.274399999999996}}}, 
                 CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 
                 4.2739}, {16.7898, 6.1199}, {18.0378, 9.338899999999999}, {
                 18.0378, 13.000899999999998`}, {18.0378, 16.5719}, {16.8508, 
                 19.721899999999998`}, {15.0438, 21.587900000000005`}}}, 
                 CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 21.765599999999996`}, {
                 13., 4.011599999999994}}}, CurveClosed -> {0}]}}, 
              AspectRatio -> Automatic, ImageSize -> {25., 25.}, 
              PlotRange -> {{0., 25.}, {0., 25.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Chrome\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               
                RowBox[{
                  TagBox["\"ElementId: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"0.3518851626298065-3\"", "SummaryItem"]}], ""}}, 
              AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
         GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               Appearance -> None, BaseStyle -> {}, 
               ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.04], {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                 13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 4.}, {
                 4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {13., 
                 22.}}}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                 13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 4.}, {
                 4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {13., 
                 22.}}}, CurveClosed -> {1}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Thickness[0.041639999999999996`], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 
                 10.2964}, {6.5485, 8.846400000000001}, {9.5855, 7.9164}, {
                 12.9955, 7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {
                 21.5385, 10.3964}}}, CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Thickness[0.041639999999999996`], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 
                 17.6963}, {7.4428, 16.5953}, {10.0828, 
                 15.916300000000001`}, {12.994800000000001`, 
                 15.916300000000001`}, {15.9288, 15.916300000000001`}, {
                 18.5888, 16.6053}, {20.5248, 17.7213}}}, 
                 CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Thickness[0.041639999999999996`], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 
                 13.5786}, {6.450200000000001, 12.5036}, {9.5562, 11.8666}, {
                 12.984200000000001`, 11.9156}, {16.4042, 
                 11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                 13.8266}}}, CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                 10.955100000000002`, 21.586399999999998`}, {
                 9.148100000000001, 19.720399999999998`}, {7.962100000000001, 
                 16.571399999999997`}, {7.962100000000001, 
                 13.000399999999997`}, {7.962100000000001, 9.3384}, {
                 9.210100000000002, 6.1203999999999965`}, {
                 11.095100000000002`, 4.274399999999996}}}, 
                 CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 
                 4.2739}, {16.7898, 6.1199}, {18.0378, 9.338899999999999}, {
                 18.0378, 13.000899999999998`}, {18.0378, 16.5719}, {16.8508, 
                 19.721899999999998`}, {15.0438, 21.587900000000005`}}}, 
                 CurveClosed -> {0}]}, {
                RGBColor[0.392, 0.392, 0.392], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm[{"Miter", 10.}], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 21.765599999999996`}, {
                 13., 4.011599999999994}}}, CurveClosed -> {0}]}}, 
              AspectRatio -> Automatic, ImageSize -> {25., 25.}, 
              PlotRange -> {{0., 25.}, {0., 25.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Chrome\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               
                RowBox[{
                  TagBox["\"ElementId: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"0.3518851626298065-3\"", "SummaryItem"]}], ""}, {
                RowBox[{
                  TagBox["\"Driver URL: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"http://localhost:44115\"", "SummaryItem"]}], ""}, {
                RowBox[{
                  TagBox["\"Driver Process: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["7217", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"lina\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"11.12064`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sun 10 Oct 2021 06:38:49\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2021", ",", "10", ",", "10", ",", "6", ",", "38",
                     ",", "49.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.1300000000000000044`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0400000000000000008`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"15", "25", "10.`5.", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Hours\"", ",", "\"Minutes\"", ",", 
                    "\"Seconds\""}], "}"}]}, "QuantityMixedUnit3"], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, 
                    "PPID" -> 7217, "Program" -> "chromedriver", "Path" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "User" -> "lina", "StartTime" -> 
                    DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
                    "Gregorian", -5.]]], Editable -> False, 
                    SelectWithContents -> True, Selectable -> False], 
                   "SummaryItem"]}], ""}}, AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   WebElementObject[
    Association[
    "SessionID" -> "b33e6c83c5c085ce9c0d99115be88686", "Browser" -> "Chrome", 
     "Process" -> ProcessObject[
       Association[
       "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, "PPID" -> 7217, 
        "Program" -> "chromedriver", "Path" -> 
        "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/Components/\
WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/chromedriver", 
        "User" -> "lina", "StartTime" -> 
        DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", "Gregorian", -5.]]],
      "URL" -> "http://localhost:44115", "Exec" -> 
     "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/Components/WebUnit/\
Resources/DriverBinaries/ChromeDriver/Linux-x86-64/chromedriver", "ElementId" -> 
     "0.3518851626298065-3"]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellContext->"Cell$$6389`",
 CellLabel->"Out[12]=",
 CellID->1738547905,ExpressionUUID->"291b76ab-0f63-4715-9831-684d9315222d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WebExecute", "[", 
  RowBox[{"\"\<ClickElement\>\"", "\[Rule]", "%12"}], "]"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->1370907210,ExpressionUUID->"78fc7840-28d6-46cf-b58d-1afe77a46698"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.854187499999998`, {0., 10.854187499999998`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[Checkmark]\"", StripOnInput -> False, LineColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FrontFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              BackFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              GraphicsColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FontSize -> 25, FontColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451]], 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"ClickElement was successful.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Element\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["WebElementObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {8.3083125, {0., 8.3083125}}], 
                    Appearance -> None, BaseStyle -> {}, 
                    ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}, CurveClosed -> {1}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 
                    10.2964}, {6.5485, 8.846400000000001}, {9.5855, 7.9164}, {
                    12.9955, 7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {
                    21.5385, 10.3964}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 
                    17.6963}, {7.4428, 16.5953}, {10.0828, 
                    15.916300000000001`}, {12.994800000000001`, 
                    15.916300000000001`}, {15.9288, 15.916300000000001`}, {
                    18.5888, 16.6053}, {20.5248, 17.7213}}}, 
                    CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 
                    13.5786}, {6.450200000000001, 12.5036}, {9.5562, 
                    11.8666}, {12.984200000000001`, 11.9156}, {16.4042, 
                    11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                    13.8266}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                    10.955100000000002`, 21.586399999999998`}, {
                    9.148100000000001, 19.720399999999998`}, {
                    7.962100000000001, 16.571399999999997`}, {
                    7.962100000000001, 13.000399999999997`}, {
                    7.962100000000001, 9.3384}, {9.210100000000002, 
                    6.1203999999999965`}, {11.095100000000002`, 
                    4.274399999999996}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 
                    4.2739}, {16.7898, 6.1199}, {18.0378, 
                    9.338899999999999}, {18.0378, 13.000899999999998`}, {
                    18.0378, 16.5719}, {16.8508, 19.721899999999998`}, {
                    15.0438, 21.587900000000005`}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 
                    21.765599999999996`}, {13., 4.011599999999994}}}, 
                    CurveClosed -> {0}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Chrome\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"ElementId: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0.3518851626298065-3\"", "SummaryItem"]}], ""}},
                     AutoDelete -> False, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                    BaseStyle -> {}, 
                    ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}, CurveClosed -> {1}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 
                    10.2964}, {6.5485, 8.846400000000001}, {9.5855, 7.9164}, {
                    12.9955, 7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {
                    21.5385, 10.3964}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 
                    17.6963}, {7.4428, 16.5953}, {10.0828, 
                    15.916300000000001`}, {12.994800000000001`, 
                    15.916300000000001`}, {15.9288, 15.916300000000001`}, {
                    18.5888, 16.6053}, {20.5248, 17.7213}}}, 
                    CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 
                    13.5786}, {6.450200000000001, 12.5036}, {9.5562, 
                    11.8666}, {12.984200000000001`, 11.9156}, {16.4042, 
                    11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                    13.8266}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                    10.955100000000002`, 21.586399999999998`}, {
                    9.148100000000001, 19.720399999999998`}, {
                    7.962100000000001, 16.571399999999997`}, {
                    7.962100000000001, 13.000399999999997`}, {
                    7.962100000000001, 9.3384}, {9.210100000000002, 
                    6.1203999999999965`}, {11.095100000000002`, 
                    4.274399999999996}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 
                    4.2739}, {16.7898, 6.1199}, {18.0378, 
                    9.338899999999999}, {18.0378, 13.000899999999998`}, {
                    18.0378, 16.5719}, {16.8508, 19.721899999999998`}, {
                    15.0438, 21.587900000000005`}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 
                    21.765599999999996`}, {13., 4.011599999999994}}}, 
                    CurveClosed -> {0}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Chrome\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"ElementId: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0.3518851626298065-3\"", "SummaryItem"]}], ""}, {
                    RowBox[{
                    TagBox["\"Driver URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"http://localhost:44115\"", "SummaryItem"]}], 
                    ""}, {
                    RowBox[{
                    TagBox["\"Driver Process: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["7217", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"lina\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"11.145216`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sun 10 Oct 2021 06:38:49\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2021", ",", "10", ",", "10", ",", "6", ",", "38",
                     ",", "49.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.1300000000000000044`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0599999999999999978`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"15", "25", "24.`5.", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Hours\"", ",", "\"Minutes\"", ",", 
                    "\"Seconds\""}], "}"}]}, "QuantityMixedUnit3"], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ProcessObject[
                    Association["ManagedProcess" -> True, "UID" -> 6, "PID" -> 
                    23650, "PPID" -> 7217, "Program" -> "chromedriver", 
                    "Path" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "User" -> "lina", "StartTime" -> 
                    DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
                    "Gregorian", -5.]]], Editable -> False, 
                    SelectWithContents -> True, Selectable -> False], 
                    "SummaryItem"]}], ""}}, AutoDelete -> False, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    WebElementObject[
                    Association[
                    "SessionID" -> "b33e6c83c5c085ce9c0d99115be88686", 
                    "Browser" -> "Chrome", "Process" -> ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, 
                    "PPID" -> 7217, "Program" -> "chromedriver", "Path" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "User" -> "lina", "StartTime" -> 
                    DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
                    "Gregorian", -5.]]], "URL" -> "http://localhost:44115", 
                    "Exec" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "ElementId" -> "0.3518851626298065-3"]], Editable -> False, 
                    SelectWithContents -> True, Selectable -> False], "}"}], 
                  "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[Checkmark]\"", StripOnInput -> False, LineColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FrontFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              BackFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              GraphicsColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FontSize -> 25, FontColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451]], 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"ClickElement was successful.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Element\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["WebElementObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}, CurveClosed -> {1}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 
                    10.2964}, {6.5485, 8.846400000000001}, {9.5855, 7.9164}, {
                    12.9955, 7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {
                    21.5385, 10.3964}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 
                    17.6963}, {7.4428, 16.5953}, {10.0828, 
                    15.916300000000001`}, {12.994800000000001`, 
                    15.916300000000001`}, {15.9288, 15.916300000000001`}, {
                    18.5888, 16.6053}, {20.5248, 17.7213}}}, 
                    CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 
                    13.5786}, {6.450200000000001, 12.5036}, {9.5562, 
                    11.8666}, {12.984200000000001`, 11.9156}, {16.4042, 
                    11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                    13.8266}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                    10.955100000000002`, 21.586399999999998`}, {
                    9.148100000000001, 19.720399999999998`}, {
                    7.962100000000001, 16.571399999999997`}, {
                    7.962100000000001, 13.000399999999997`}, {
                    7.962100000000001, 9.3384}, {9.210100000000002, 
                    6.1203999999999965`}, {11.095100000000002`, 
                    4.274399999999996}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 
                    4.2739}, {16.7898, 6.1199}, {18.0378, 
                    9.338899999999999}, {18.0378, 13.000899999999998`}, {
                    18.0378, 16.5719}, {16.8508, 19.721899999999998`}, {
                    15.0438, 21.587900000000005`}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 
                    21.765599999999996`}, {13., 4.011599999999994}}}, 
                    CurveClosed -> {0}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Chrome\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"ElementId: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0.3518851626298065-3\"", "SummaryItem"]}], ""}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13., 22.}, {17.971, 22.}, {22., 17.971}, {22., 
                    13.}, {22., 8.029}, {17.971, 4.}, {13., 4.}, {8.029, 
                    4.}, {4., 8.029}, {4., 13.}, {4., 17.971}, {8.029, 22.}, {
                    13., 22.}}}, CurveClosed -> {1}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.5835, 
                    10.2964}, {6.5485, 8.846400000000001}, {9.5855, 7.9164}, {
                    12.9955, 7.9164}, {16.4815, 7.9164}, {19.5795, 8.8894}, {
                    21.5385, 10.3964}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{5.5098, 
                    17.6963}, {7.4428, 16.5953}, {10.0828, 
                    15.916300000000001`}, {12.994800000000001`, 
                    15.916300000000001`}, {15.9288, 15.916300000000001`}, {
                    18.5888, 16.6053}, {20.5248, 17.7213}}}, 
                    CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Thickness[0.041639999999999996`], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{4.1802, 
                    13.5786}, {6.450200000000001, 12.5036}, {9.5562, 
                    11.8666}, {12.984200000000001`, 11.9156}, {16.4042, 
                    11.964599999999999`}, {19.5062, 12.6896}, {21.7742, 
                    13.8266}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{
                    10.955100000000002`, 21.586399999999998`}, {
                    9.148100000000001, 19.720399999999998`}, {
                    7.962100000000001, 16.571399999999997`}, {
                    7.962100000000001, 13.000399999999997`}, {
                    7.962100000000001, 9.3384}, {9.210100000000002, 
                    6.1203999999999965`}, {11.095100000000002`, 
                    4.274399999999996}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{14.9048, 
                    4.2739}, {16.7898, 6.1199}, {18.0378, 
                    9.338899999999999}, {18.0378, 13.000899999999998`}, {
                    18.0378, 16.5719}, {16.8508, 19.721899999999998`}, {
                    15.0438, 21.587900000000005`}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{13., 
                    21.765599999999996`}, {13., 4.011599999999994}}}, 
                    CurveClosed -> {0}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Browser: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Chrome\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"ElementId: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0.3518851626298065-3\"", "SummaryItem"]}], ""}, {
                    RowBox[{
                    TagBox["\"Driver URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"http://localhost:44115\"", "SummaryItem"]}], 
                    ""}, {
                    RowBox[{
                    TagBox["\"Driver Process: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23650", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["7217", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"lina\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"11.145216`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sun 10 Oct 2021 06:38:49\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2021", ",", "10", ",", "10", ",", "6", ",", "38",
                     ",", "49.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "5.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.1300000000000000044`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0599999999999999978`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"15", "25", "24.`5.", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Hours\"", ",", "\"Minutes\"", ",", 
                    "\"Seconds\""}], "}"}]}, "QuantityMixedUnit3"], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, 
                    "PPID" -> 7217, "Program" -> "chromedriver", "Path" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "User" -> "lina", "StartTime" -> 
                    DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
                    "Gregorian", -5.]]], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "SummaryItem"]}], 
                    ""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    WebElementObject[
                    Association[
                    "SessionID" -> "b33e6c83c5c085ce9c0d99115be88686", 
                    "Browser" -> "Chrome", "Process" -> ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, 
                    "PPID" -> 7217, "Program" -> "chromedriver", "Path" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "User" -> "lina", "StartTime" -> 
                    DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
                    "Gregorian", -5.]]], "URL" -> "http://localhost:44115", 
                    "Exec" -> 
                    "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/\
Components/WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/\
chromedriver", "ElementId" -> "0.3518851626298065-3"]], Editable -> False, 
                    SelectWithContents -> True, Selectable -> False], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"ClickElement\"", "SummaryItem"]}]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success["ClickElement", 
   Association[
   "MessageTemplate" :> "`command` was successful.", "MessageParameters" -> 
    Association["command" -> "ClickElement"], "Element" -> {
      WebElementObject[
       Association[
       "SessionID" -> "b33e6c83c5c085ce9c0d99115be88686", "Browser" -> 
        "Chrome", "Process" -> ProcessObject[
          Association[
          "ManagedProcess" -> True, "UID" -> 6, "PID" -> 23650, "PPID" -> 
           7217, "Program" -> "chromedriver", "Path" -> 
           "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/Components/\
WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/chromedriver", 
           "User" -> "lina", "StartTime" -> 
           DateObject[{2021, 10, 10, 6, 38, 49.}, "Instant", 
             "Gregorian", -5.]]], "URL" -> "http://localhost:44115", "Exec" -> 
        "/usr/local/Wolfram/WolframDesktop/12.3/SystemFiles/Components/\
WebUnit/Resources/DriverBinaries/ChromeDriver/Linux-x86-64/chromedriver", 
        "ElementId" -> "0.3518851626298065-3"]]}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellContext->"Cell$$6389`",
 CellLabel->"Out[14]=",
 CellID->1832489265,ExpressionUUID->"0675e26d-500a-41f5-9cd7-02a5f612f54e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DatabaseReference", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<Backend\>\"", "->", "\"\<SQLite\>\""}], "|>"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.839018893779551*^9, 3.839018893780505*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"efd7e999-bc10-4346-9b45-023292ba9a56"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DatabaseReference",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{21.0264, 18.2393}, {21.0264, 15.5973}, {17.2094, 
                13.456299999999999`}, {12.500399999999999`, 
                13.456299999999999`}, {7.791399999999999, 
                13.456299999999999`}, {3.973399999999998, 15.5973}, {
                3.973399999999998, 18.2393}, {3.973399999999998, 20.8813}, {
                7.791399999999999, 23.0213}, {12.500399999999999`, 23.0213}, {
                17.2094, 23.0213}, {21.0264, 20.8813}, {21.0264, 
                18.2393}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0Bmg5x3ifYbbvNHNpeB+6Qc1WA82vsTeN2nRR0
kJh6hTNjkgmcv4H5eY+GrRGcz+Tbwut/Xh+ufyJ/ldnqe9oOMPNhfFuu64sL
7hrA+YobijIm9prA9cP4MPNhfJj9MP0w96G7H8a/JV2TaPRV00E2KsX6/nlZ
OB8iz+Pwa0H65leT9eB8mH0w/qqmQM+5BqZw/Zau7kU/683h5sP4lS/VDDl6
DFHlG0zh+mF8FPOBfJj9MP2o7kO4HwAEYoXy
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{12.5, 23.0215}, {
                7.7909999999999995`, 23.0215}, {3.974, 20.880499999999998`}, {
                3.974, 18.2395}, {3.974, 6.7605}, {3.974, 
                4.119500000000002}, {7.7909999999999995`, 
                1.9785000000000004`}, {12.5, 1.9785000000000004`}, {17.209, 
                1.9785000000000004`}, {21.026, 4.119500000000002}, {21.026, 
                6.7605}, {21.026, 18.2395}, {21.026, 20.880499999999998`}, {
                17.209, 23.0215}, {12.5, 23.0215}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 
                 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{20.552699999999998`, 10.5869}, {20.552699999999998`,
                  8.2539}, {16.8647, 6.2819}, {12.499699999999997`, 6.2819}, {
                 8.135699999999998, 6.2819}, {4.4476999999999975`, 8.2539}, {
                 4.4476999999999975`, 10.5869}, {4.4476999999999975`, 
                 12.0379}, {5.9087, 10.3139}, {8.926699999999999, 9.1519}, {
                 12.499699999999997`, 9.1519}, {16.073699999999995`, 
                 9.1519}, {19.0907, 10.3139}, {20.552699999999998`, 
                 12.0379}}, {{20.552699999999998`, 6.7609}, {
                 20.552699999999998`, 4.4279}, {16.8647, 
                 2.4559000000000015`}, {12.499699999999997`, 
                 2.4559000000000015`}, {8.135699999999998, 
                 2.4559000000000015`}, {4.4476999999999975`, 4.4279}, {
                 4.4476999999999975`, 6.7609}, {4.4476999999999975`, 
                 8.2119}, {5.9087, 6.4879}, {8.926699999999999, 5.3259}, {
                 12.499699999999997`, 5.3259}, {16.073699999999995`, 
                 5.3259}, {19.0907, 6.4879}, {20.552699999999998`, 
                 8.2119}}, CompressedData["
1:eJxTTMoPSmViYGBQBWIQPe/sqvNX2UwdUs7Eep/YbuTAFj/DR/SPCZxvLGhm
s5fJ1KE/uERler+RA0z9/NVrb8SnIfgbmJ/3aNgi+AqOH5PPrDV0UH3SPO/s
LRMH7xPstrNVDR1O13vsr+01cUj7/iRx4TIDOD+H8+eC9Ms6cP7sZ7LLX2ho
OLy4ueZXzF0DB4Eqs9V25ioOISCL/2vA+elKORVVrgpwvsPazHuFpwTh+mF8
mPkwPsz+G9I1iUZTBeDue/H6gKXyKX64+2F8mP9gfJj/OQrXdN9+wQ8PnwAD
rZXCAgLw8IOph/EzGlmO9m/khfMDatdtS/rP7RAC1P6/AcGH2Qfjc0rPi9Pk
lobzy+YsUt5Zw+dwbMbuaRPOyzpMANn//7s9LHxgfOWdf9q/dBvC+cDYCXtT
bwrXD+PDzIfxYfbD+DD3qfNzb13miUgv6OkHACYRDMY=
                 "]}]}, {
               FaceForm[{
                 RGBColor[0.8670000000000001, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBmIQ7fgx+UxstoGDtP5dFTZGXYdHx2fsniag4/AmcIdc
q7aBA1eGUk5FlIHDl79XKl6yYfIb1A61LS83dGBrnOrc/UbfYXbo/NVrdxjC
5bN8P/cFfzF0aBe7ee67sIHDPoOZWhKmxg5HFTYUZQgaEuQnx95xY7bQd/h0
yTdJIMLIIc+kYbvDIR2Hypdqhhw8xg5OazPvFXLpOjglPL2gZG3iwOjbwuuf
r+Ngc9+/d/o5UzhfFeTA06YORV19Tz7N13LY9hnoQE9TB6Durr4ULYfMiW9r
7E1NHW5J1yQaTdVwKN83X0p/r4lDHND6itPqDrd/1mXtKTF12Lj/zTybHHWH
DpB/Nps6LH/hofd/oRrE/GwzB7Hfp9+ddFZxKM4AGnjf1EHkgsuNDyVKDg+A
zsn7ZOIANI1bRUPR4fRC122f7xo7PPkkfyn/voIDKPhyjhs7uN748MVrpoKD
bFSK9f31xg4g63RCFByaD5xa6DrN2GG+jc6VWWoKDkIggVZjBzGPgD8Sn+Ud
RNe5P6wqMXZwWHJ/H98ceYdOR2CAJBk7aCzo3PDwpZzDGhmggfbGDmu2JdXf
tJVzAAXXbUljBy431VKmWbJQ9xk5eFU36/uoyToIRFhuOXHNyGEZyLjNMg7v
gKETt8vIIY0hv5HFVQYSPnONHBJCgtQXdEo6+JiDbDR04JCeF6fpLe6wt2Sy
BIuYocO71wcslb1EIe4LAaYH7W/T7woLOySBLHhh4PAGJH9K0IFJG5hC+gzh
fLD5tkZwPth9k0wc9h0UVwt2VYCEd7eZg8W1o7kmDJpw/uSVTYGedw3g/DJ/
ObGsXhO4fhgfZj6M/2H5MW/zlQYObEIi9sfuGDn0Tc8Tam7Qc0DPHwDu+047

                 "], {{12.500399999999999`, 20.349}, {13.1264, 20.689}, {
                 13.2204, 20.739}, {13.8234, 21.064}, {13.8704, 20.414}, {
                 13.8474, 20.076}, {13.776399999999999`, 
                 19.281000000000002`}, {13.4294, 19.478}, {
                 12.732399999999998`, 19.725}, {12.732399999999998`, 
                 19.725}, {12.732399999999998`, 19.725}, {12.593399999999999`,
                  20.18}, {12.500399999999999`, 20.349}}, CompressedData["
1:eJxTTMoPSmViYGCwAGIQ/UHMI+DPDAmHtteBO+Rc9R2u7HksIusp7fBNI6b/
kKmhQ9RloMBcOYcdcq2vA38YOQgu3XtQ/JmiQ9aekskSLcYOTY+Oz9gdpgyR
tzBxeDAHpELZocsx4ekFJ1OHePZzkoFRag429/17p58zdQhmXTzJilEdLp/a
kRx7h03DIeTx0tlHFEwc6np2ZnPu1HC487Mua88UYwcNkMBJbQe3bZ//Xtlh
5KDrLPP6kZmBQ+NU5+6c5YYOIvbH7mw9YujQfODUQlczQ4dTRkc26r0zdEgS
iLDcomHo8JP/5fb1ykYOb4Deaz1tgME3BirPazZ0eFdjbxoXZeBwZdYz2eUr
VB2qRda5P9xl4ABy/q1oVYdXaoYca/YYOJyYsXvaBH5VBzuu64sL9ho4/Dr9
7uThQypw/q5szp8LnivD+Tc+fPGKZFN28OJh0m7fZuDAXMGtovFP0QEkbbvK
wMF//ZTUjsVKDs8uKN3+KWfoALL+BYeKAzD0v2rUEOZDIkDJYZErMIC2GELD
X9FBHhgdO/YZOmwV/X36HaeSg+KGooyJbw0dGraDdCg5gIKzQtPI4drRXJOG
70oO6kDvyVgZOcwFaZ+u5LDq4yXfJAMjh4gVpmetz8k7zJoJBDeB4fvUfsl9
O3mI/ARDh43738yzeaPgAPKeWKWhw6V8YIzfVHRwAkavUjRhfk2iUahBloLD
L2B0l3w2cFj2wkPvv6KCQzHQtTX2mHxw+KarOJROlmAJyzNwmApKQHPUIe4J
MHDIAUlvVneYApTm8zVwkFsONGA/gh93x4254jSCDzL9b5kmJDw8DRwMtFYK
X2DRc3gATK55QToOoOD2yNNxSAalJw4dhwn8VWar92lBwveetoMFKAAZNOH8
eTY6wCSkDOdvePhy6qYeOYed4Pyh64Ce3wCDEYra
                 "], {{
                 12.500399999999999`, 23.5}, {7.4533999999999985`, 23.5}, {
                 3.500399999999999, 21.189}, {3.500399999999999, 18.239}, {
                 3.500399999999999, 15.289000000000001`}, {
                 7.4533999999999985`, 12.979000000000001`}, {
                 12.500399999999999`, 12.979000000000001`}, {17.5464, 
                 12.979000000000001`}, {21.5004, 15.289000000000001`}, {
                 21.5004, 18.239}, {21.5004, 21.189}, {17.5464, 23.5}, {
                 12.500399999999999`, 23.5}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{14.2646, 17.915}, {13.7296, 18.136}, {13.1496, 
                18.369999999999997`}, {12.3616, 18.305999999999997`}, {
                12.2906, 18.188}, {12.2226, 18.096999999999998`}, {12.1756, 
                17.967}, {12.5466, 17.992}, {12.9416, 17.915}, {13.3826, 
                17.771}, {13.8006, 17.837}, {13.8476, 17.849999999999998`}, {
                14.2646, 17.915}}}]}}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], AspectRatio -> Automatic, 
              ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}}], 
            
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"Missing", "[", "\"InMemory\"", "]"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SQLite\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{21.0264, 18.2393}, {21.0264, 15.5973}, {17.2094, 
                13.456299999999999`}, {12.500399999999999`, 
                13.456299999999999`}, {7.791399999999999, 
                13.456299999999999`}, {3.973399999999998, 15.5973}, {
                3.973399999999998, 18.2393}, {3.973399999999998, 20.8813}, {
                7.791399999999999, 23.0213}, {12.500399999999999`, 23.0213}, {
                17.2094, 23.0213}, {21.0264, 20.8813}, {21.0264, 
                18.2393}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0Bmg5x3ifYbbvNHNpeB+6Qc1WA82vsTeN2nRR0
kJh6hTNjkgmcv4H5eY+GrRGcz+Tbwut/Xh+ufyJ/ldnqe9oOMPNhfFuu64sL
7hrA+YobijIm9prA9cP4MPNhfJj9MP0w96G7H8a/JV2TaPRV00E2KsX6/nlZ
OB8iz+Pwa0H65leT9eB8mH0w/qqmQM+5BqZw/Zau7kU/683h5sP4lS/VDDl6
DFHlG0zh+mF8FPOBfJj9MP2o7kO4HwAEYoXy
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{12.5, 23.0215}, {
                7.7909999999999995`, 23.0215}, {3.974, 20.880499999999998`}, {
                3.974, 18.2395}, {3.974, 6.7605}, {3.974, 
                4.119500000000002}, {7.7909999999999995`, 
                1.9785000000000004`}, {12.5, 1.9785000000000004`}, {17.209, 
                1.9785000000000004`}, {21.026, 4.119500000000002}, {21.026, 
                6.7605}, {21.026, 18.2395}, {21.026, 20.880499999999998`}, {
                17.209, 23.0215}, {12.5, 23.0215}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 
                 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{20.552699999999998`, 10.5869}, {20.552699999999998`,
                  8.2539}, {16.8647, 6.2819}, {12.499699999999997`, 6.2819}, {
                 8.135699999999998, 6.2819}, {4.4476999999999975`, 8.2539}, {
                 4.4476999999999975`, 10.5869}, {4.4476999999999975`, 
                 12.0379}, {5.9087, 10.3139}, {8.926699999999999, 9.1519}, {
                 12.499699999999997`, 9.1519}, {16.073699999999995`, 
                 9.1519}, {19.0907, 10.3139}, {20.552699999999998`, 
                 12.0379}}, {{20.552699999999998`, 6.7609}, {
                 20.552699999999998`, 4.4279}, {16.8647, 
                 2.4559000000000015`}, {12.499699999999997`, 
                 2.4559000000000015`}, {8.135699999999998, 
                 2.4559000000000015`}, {4.4476999999999975`, 4.4279}, {
                 4.4476999999999975`, 6.7609}, {4.4476999999999975`, 
                 8.2119}, {5.9087, 6.4879}, {8.926699999999999, 5.3259}, {
                 12.499699999999997`, 5.3259}, {16.073699999999995`, 
                 5.3259}, {19.0907, 6.4879}, {20.552699999999998`, 
                 8.2119}}, CompressedData["
1:eJxTTMoPSmViYGBQBWIQPe/sqvNX2UwdUs7Eep/YbuTAFj/DR/SPCZxvLGhm
s5fJ1KE/uERler+RA0z9/NVrb8SnIfgbmJ/3aNgi+AqOH5PPrDV0UH3SPO/s
LRMH7xPstrNVDR1O13vsr+01cUj7/iRx4TIDOD+H8+eC9Ms6cP7sZ7LLX2ho
OLy4ueZXzF0DB4Eqs9V25ioOISCL/2vA+elKORVVrgpwvsPazHuFpwTh+mF8
mPkwPsz+G9I1iUZTBeDue/H6gKXyKX64+2F8mP9gfJj/OQrXdN9+wQ8PnwAD
rZXCAgLw8IOph/EzGlmO9m/khfMDatdtS/rP7RAC1P6/AcGH2Qfjc0rPi9Pk
lobzy+YsUt5Zw+dwbMbuaRPOyzpMANn//7s9LHxgfOWdf9q/dBvC+cDYCXtT
bwrXD+PDzIfxYfbD+DD3qfNzb13miUgv6OkHACYRDMY=
                 "]}]}, {
               FaceForm[{
                 RGBColor[0.8670000000000001, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBmIQ7fgx+UxstoGDtP5dFTZGXYdHx2fsniag4/AmcIdc
q7aBA1eGUk5FlIHDl79XKl6yYfIb1A61LS83dGBrnOrc/UbfYXbo/NVrdxjC
5bN8P/cFfzF0aBe7ee67sIHDPoOZWhKmxg5HFTYUZQgaEuQnx95xY7bQd/h0
yTdJIMLIIc+kYbvDIR2Hypdqhhw8xg5OazPvFXLpOjglPL2gZG3iwOjbwuuf
r+Ngc9+/d/o5UzhfFeTA06YORV19Tz7N13LY9hnoQE9TB6Durr4ULYfMiW9r
7E1NHW5J1yQaTdVwKN83X0p/r4lDHND6itPqDrd/1mXtKTF12Lj/zTybHHWH
DpB/Nps6LH/hofd/oRrE/GwzB7Hfp9+ddFZxKM4AGnjf1EHkgsuNDyVKDg+A
zsn7ZOIANI1bRUPR4fRC122f7xo7PPkkfyn/voIDKPhyjhs7uN748MVrpoKD
bFSK9f31xg4g63RCFByaD5xa6DrN2GG+jc6VWWoKDkIggVZjBzGPgD8Sn+Ud
RNe5P6wqMXZwWHJ/H98ceYdOR2CAJBk7aCzo3PDwpZzDGhmggfbGDmu2JdXf
tJVzAAXXbUljBy431VKmWbJQ9xk5eFU36/uoyToIRFhuOXHNyGEZyLjNMg7v
gKETt8vIIY0hv5HFVQYSPnONHBJCgtQXdEo6+JiDbDR04JCeF6fpLe6wt2Sy
BIuYocO71wcslb1EIe4LAaYH7W/T7woLOySBLHhh4PAGJH9K0IFJG5hC+gzh
fLD5tkZwPth9k0wc9h0UVwt2VYCEd7eZg8W1o7kmDJpw/uSVTYGedw3g/DJ/
ObGsXhO4fhgfZj6M/2H5MW/zlQYObEIi9sfuGDn0Tc8Tam7Qc0DPHwDu+047

                 "], {{12.500399999999999`, 20.349}, {13.1264, 20.689}, {
                 13.2204, 20.739}, {13.8234, 21.064}, {13.8704, 20.414}, {
                 13.8474, 20.076}, {13.776399999999999`, 
                 19.281000000000002`}, {13.4294, 19.478}, {
                 12.732399999999998`, 19.725}, {12.732399999999998`, 
                 19.725}, {12.732399999999998`, 19.725}, {12.593399999999999`,
                  20.18}, {12.500399999999999`, 20.349}}, CompressedData["
1:eJxTTMoPSmViYGCwAGIQ/UHMI+DPDAmHtteBO+Rc9R2u7HksIusp7fBNI6b/
kKmhQ9RloMBcOYcdcq2vA38YOQgu3XtQ/JmiQ9aekskSLcYOTY+Oz9gdpgyR
tzBxeDAHpELZocsx4ekFJ1OHePZzkoFRag429/17p58zdQhmXTzJilEdLp/a
kRx7h03DIeTx0tlHFEwc6np2ZnPu1HC487Mua88UYwcNkMBJbQe3bZ//Xtlh
5KDrLPP6kZmBQ+NU5+6c5YYOIvbH7mw9YujQfODUQlczQ4dTRkc26r0zdEgS
iLDcomHo8JP/5fb1ykYOb4Deaz1tgME3BirPazZ0eFdjbxoXZeBwZdYz2eUr
VB2qRda5P9xl4ABy/q1oVYdXaoYca/YYOJyYsXvaBH5VBzuu64sL9ho4/Dr9
7uThQypw/q5szp8LnivD+Tc+fPGKZFN28OJh0m7fZuDAXMGtovFP0QEkbbvK
wMF//ZTUjsVKDs8uKN3+KWfoALL+BYeKAzD0v2rUEOZDIkDJYZErMIC2GELD
X9FBHhgdO/YZOmwV/X36HaeSg+KGooyJbw0dGraDdCg5gIKzQtPI4drRXJOG
70oO6kDvyVgZOcwFaZ+u5LDq4yXfJAMjh4gVpmetz8k7zJoJBDeB4fvUfsl9
O3mI/ARDh43738yzeaPgAPKeWKWhw6V8YIzfVHRwAkavUjRhfk2iUahBloLD
L2B0l3w2cFj2wkPvv6KCQzHQtTX2mHxw+KarOJROlmAJyzNwmApKQHPUIe4J
MHDIAUlvVneYApTm8zVwkFsONGA/gh93x4254jSCDzL9b5kmJDw8DRwMtFYK
X2DRc3gATK55QToOoOD2yNNxSAalJw4dhwn8VWar92lBwveetoMFKAAZNOH8
eTY6wCSkDOdvePhy6qYeOYed4Pyh64Ce3wCDEYra
                 "], {{
                 12.500399999999999`, 23.5}, {7.4533999999999985`, 23.5}, {
                 3.500399999999999, 21.189}, {3.500399999999999, 18.239}, {
                 3.500399999999999, 15.289000000000001`}, {
                 7.4533999999999985`, 12.979000000000001`}, {
                 12.500399999999999`, 12.979000000000001`}, {17.5464, 
                 12.979000000000001`}, {21.5004, 15.289000000000001`}, {
                 21.5004, 18.239}, {21.5004, 21.189}, {17.5464, 23.5}, {
                 12.500399999999999`, 23.5}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{14.2646, 17.915}, {13.7296, 18.136}, {13.1496, 
                18.369999999999997`}, {12.3616, 18.305999999999997`}, {
                12.2906, 18.188}, {12.2226, 18.096999999999998`}, {12.1756, 
                17.967}, {12.5466, 17.992}, {12.9416, 17.915}, {13.3826, 
                17.771}, {13.8006, 17.837}, {13.8476, 17.849999999999998`}, {
                14.2646, 17.915}}}]}}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], AspectRatio -> Automatic, 
              ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}}], 
            
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"Missing", "[", "\"InMemory\"", "]"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SQLite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"18ntedjcxxxnf\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DatabaseReference[
   Association["Backend" -> "SQLite"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.839018898309252*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"c5c969c6-addc-4745-ba5f-047e64b83188"]
}, Open  ]]
},
WindowSize->{1152., 610.8},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.3 for Linux x86 (64-bit) (June 24, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"24d0c477-7c6d-46dc-a2dc-3ec10c95c766"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[561, 20, 262, 5, 29, "Input",ExpressionUUID->"bf5ec98a-db2c-44ac-b884-50c2e4aefff0"],
Cell[826, 27, 330, 8, 29, "Input",ExpressionUUID->"4b818ccc-1ddd-4b43-b6d1-9f96bf9e523b"],
Cell[CellGroupData[{
Cell[1181, 39, 671, 17, 29, "Input",ExpressionUUID->"4aeb2b88-e3ba-43a9-9403-a579d011490b"],
Cell[1855, 58, 186091, 3558, 664, "Output",ExpressionUUID->"ba6e09cb-d72f-46ae-9647-63bc7397bbbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187983, 3621, 207, 3, 29, "Input",ExpressionUUID->"ea7d964f-aef0-4f06-ae07-7bdc26b20971"],
Cell[188193, 3626, 75015, 1396, 617, "Output",ExpressionUUID->"fb59c28c-3185-4d1b-9ea6-a47cda0e983c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263245, 5027, 229, 4, 29, "Input",ExpressionUUID->"71b08a63-7112-4b5d-81b8-f51c067474bc"],
Cell[263477, 5033, 74356, 1367, 160, "Output",ExpressionUUID->"109d76e5-9160-4629-953e-e74de11dfb80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337870, 6405, 253, 4, 29, "Input",ExpressionUUID->"facdef7e-da6c-4292-ae07-077fc90d5fbf"],
Cell[338126, 6411, 78503, 1499, 617, "Output",ExpressionUUID->"d71d91cb-3c7b-4d8d-a0f4-c3b0e74c2075"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416666, 7915, 241, 4, 29, "Input",ExpressionUUID->"a66905fa-ff76-43d7-9ac5-1c733fe49063"],
Cell[416910, 7921, 34038, 651, 92, "Output",ExpressionUUID->"4f1d493d-f580-4ba1-9ee1-b5bc5a81acc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450985, 8577, 215, 4, 29, "Input",ExpressionUUID->"30df372e-6e99-48cc-a09f-7038c395e230"],
Cell[451203, 8583, 150, 2, 33, "Output",ExpressionUUID->"db50f7fb-c5c9-4e78-925f-6d729330ecb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451390, 8590, 366, 9, 29, "Input",ExpressionUUID->"0b00e7b4-0fb5-4e3d-8b80-69de4a14b931"],
Cell[451759, 8601, 432, 8, 33, "Output",ExpressionUUID->"5483ed59-c669-4a42-b94a-7fc93441f565"]
}, Open  ]],
Cell[452206, 8612, 153, 3, 29, "Input",ExpressionUUID->"665f461a-1453-4d88-b974-d17111de3621"],
Cell[452362, 8617, 345, 8, 29, "Input",ExpressionUUID->"d1ae8867-29e6-4cc2-a43c-b90999e376ec"],
Cell[CellGroupData[{
Cell[452732, 8629, 204, 3, 29, "Input",ExpressionUUID->"7beb25df-beb9-4b5d-a44d-694c7e5c4749"],
Cell[452939, 8634, 230, 4, 33, "Output",ExpressionUUID->"589a14b2-9286-4aaa-84f6-ecdd5e7d24d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453206, 8643, 246, 5, 29, "Input",ExpressionUUID->"496fcbf8-23bc-4b66-9a16-74d17be9452f"],
Cell[453455, 8650, 697, 11, 54, "Output",ExpressionUUID->"11cbca56-ccf7-4101-9138-f67d94f90fac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454189, 8666, 751, 19, 29, "Input",ExpressionUUID->"6bfc474c-9124-468d-a937-06c19b3e52cb"],
Cell[454943, 8687, 3875, 56, 61, "Message",ExpressionUUID->"8e04fb3b-31b2-4f5e-95c1-c91652c71c67"],
Cell[458821, 8745, 4422, 63, 78, "Message",ExpressionUUID->"c48fdcec-a7f1-40af-996e-f5453c39648a"],
Cell[463246, 8810, 3434, 50, 61, "Message",ExpressionUUID->"5056b6c7-87d7-4537-a74a-d0f81294e875"],
Cell[466683, 8862, 4424, 63, 78, "Message",ExpressionUUID->"6ccefe27-285e-4ed4-850d-9a15ce0225ff"],
Cell[471110, 8927, 3433, 50, 61, "Message",ExpressionUUID->"c7a9627e-bc2f-4df6-9e7a-86209c6acaf9"],
Cell[474546, 8979, 56452, 1019, 70, "Output",ExpressionUUID->"fb2a8061-57e1-4ca5-923a-1c84c7f0c9d4"]
}, Open  ]],
Cell[531013, 10001, 337, 7, 29, "Input",ExpressionUUID->"90de3e52-9e00-4bf0-8709-5322a47dc989"],
Cell[CellGroupData[{
Cell[531375, 10012, 316, 5, 29, "Input",ExpressionUUID->"a2b7a1c1-c9ad-46ef-a3e9-39ecab495ae5"],
Cell[531694, 10019, 484, 9, 33, "Output",ExpressionUUID->"8035d4d6-4219-4089-932b-4e32888ac941"]
}, Open  ]],
Cell[532193, 10031, 344, 6, 29, "Input",ExpressionUUID->"2927b963-9561-49ff-8661-58ef8344d468"],
Cell[CellGroupData[{
Cell[532562, 10041, 216, 4, 29, "Input",ExpressionUUID->"b752b908-b433-4da7-9f84-982bbd4e387b"],
Cell[532781, 10047, 2979, 60, 196, "Output",ExpressionUUID->"c5624769-e3d1-4f64-b9c1-3bf36e9a9446"]
}, Open  ]],
Cell[535775, 10110, 371, 9, 29, "Input",ExpressionUUID->"718b8668-ba0d-4efb-b5bb-6fa319d17777"],
Cell[CellGroupData[{
Cell[536171, 10123, 286, 5, 29, "Input",ExpressionUUID->"71e36b48-742e-4087-8b74-6acd7c87f1a8"],
Cell[536460, 10130, 1795, 40, 155, "Output",ExpressionUUID->"d17e4320-98d7-41dc-bf9c-52bbff0f9c98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538292, 10175, 189, 4, 29, "Input",ExpressionUUID->"19a25e8b-bf66-463a-bb82-0b71fcedf610",
 CellID->52285793],
Cell[538484, 10181, 22342, 450, 65, "Output",ExpressionUUID->"c25f2bfa-3644-4411-b6cb-ee27f3b16a09",
 CellID->166699033]
}, Open  ]],
Cell[560841, 10634, 135, 1, 22, "ExampleText",ExpressionUUID->"1ad2c590-722d-433f-83eb-d5cbc02a91cf",
 CellID->61591555],
Cell[CellGroupData[{
Cell[561001, 10639, 357, 8, 50, "Input",ExpressionUUID->"e8579508-8b99-4939-b3b2-b4026fc78d39",
 CellID->12174459],
Cell[561361, 10649, 4341, 95, 65, "Output",ExpressionUUID->"e8e17cd4-aae3-4fe9-a4fb-69817a677f17",
 CellID->1438839333]
}, Open  ]],
Cell[565717, 10747, 310, 7, 24, "ExampleText",ExpressionUUID->"c6a5242e-b680-4b9a-8b7b-9af8ecb8dca0",
 CellID->448718563],
Cell[CellGroupData[{
Cell[566052, 10758, 306, 7, 29, "Input",ExpressionUUID->"887fce9f-aff2-4df6-bcbd-215342769129",
 CellID->810674945],
Cell[566361, 10767, 22655, 452, 65, "Output",ExpressionUUID->"6d6bc3f9-a376-4524-bc0a-987e843c4323",
 CellID->1263085917]
}, Open  ]],
Cell[CellGroupData[{
Cell[589053, 11224, 212, 4, 29, "Input",ExpressionUUID->"b89e20a2-6acf-4343-887a-c0e33254c37d",
 CellID->951552640],
Cell[589268, 11230, 54615, 1033, 98, "Output",ExpressionUUID->"fe279910-2308-4985-ac98-b1200e7d2302",
 CellID->171376709]
}, Open  ]],
Cell[CellGroupData[{
Cell[643920, 12268, 301, 7, 29, "Input",ExpressionUUID->"8b0bd1b3-1eb9-4ac5-8791-39e97d915558",
 CellID->276280733],
Cell[644224, 12277, 22654, 452, 65, "Output",ExpressionUUID->"291b76ab-0f63-4715-9831-684d9315222d",
 CellID->1738547905]
}, Open  ]],
Cell[CellGroupData[{
Cell[666915, 12734, 213, 4, 29, "Input",ExpressionUUID->"78fc7840-28d6-46cf-b58d-1afe77a46698",
 CellID->1370907210],
Cell[667131, 12740, 54616, 1033, 98, "Output",ExpressionUUID->"0675e26d-500a-41f5-9cd7-02a5f612f54e",
 CellID->1832489265]
}, Open  ]],
Cell[CellGroupData[{
Cell[721784, 13778, 295, 6, 29, "Input",ExpressionUUID->"efd7e999-bc10-4346-9b45-023292ba9a56"],
Cell[722082, 13786, 22065, 398, 65, "Output",ExpressionUUID->"c5c969c6-addc-4745-ba5f-047e64b83188"]
}, Open  ]]
}
]
*)

